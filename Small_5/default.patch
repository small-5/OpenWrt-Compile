--- a/config/Config-build.in
+++ b/config/Config-build.in
@@ -88,6 +88,7 @@ menu "Global build settings"
 		bool "Show packages that require graphics support (local or remote)"
 
 	config BUILD_PATENTED
+		default y
 		bool "Compile with support for patented functionality"
 		help
 		  When this option is disabled, software which provides patented functionality
--- a/config/Config-images.in
+++ b/config/Config-images.in
@@ -240,7 +240,7 @@ menu "Target Images"
 	config GRUB_TIMEOUT
 		string "Seconds to wait before booting the default entry"
 		depends on GRUB_IMAGES || GRUB_EFI_IMAGES
-		default "5"
+		default "0"
 		help
 		  If you don't know, 5 seconds is a reasonable default.
 
--- a/include/target.mk
+++ b/include/target.mk
@@ -90,11 +90,6 @@ else
   endif
 endif
 
-# include ujail on systems with enough storage
-ifeq ($(filter small_flash,$(FEATURES)),)
-  DEFAULT_PACKAGES+=procd-ujail
-endif
-
 # Add device specific packages (here below to allow device type set from subtarget)
 DEFAULT_PACKAGES += $(DEFAULT_PACKAGES.$(DEVICE_TYPE))
 
--- a/package/base-files/files/bin/config_generate
+++ b/package/base-files/files/bin/config_generate
@@ -49,10 +49,13 @@ generate_static_network() {
 			uci -q batch <<-EOF
 				delete network.globals
 				set network.globals='globals'
-				set network.globals.ula_prefix='auto'
+				set network.globals.ula_prefix='fd00::/48'
 			EOF
 		}
 
+	uci -q get network.globals >/dev/null || uci set network.globals='globals'
+	uci set network.globals.packet_steering="0"
+
 	if json_is_a dsl object; then
 		json_select dsl
 			if json_is_a atmbridge object; then
@@ -162,8 +165,8 @@ generate_network() {
 		static)
 			local ipad
 			case "$1" in
-				lan) ipad=${ipaddr:-"192.168.1.1"} ;;
-				*) ipad=${ipaddr:-"192.168.$((addr_offset++)).1"} ;;
+				lan) ipad=${ipaddr:-"10.0.0.1"} ;;
+				*) ipad=${ipaddr:-"10.0.$((addr_offset++)).1"} ;;
 			esac
 
 			netm=${netmask:-"255.255.255.0"}
@@ -177,18 +180,7 @@ generate_network() {
 		;;
 
 		dhcp)
-			# fixup IPv6 slave interface if parent is a bridge
-			[ "$type" = "bridge" ] && device="br-$1"
-
 			uci set network.$1.proto='dhcp'
-			[ -e /proc/sys/net/ipv6 ] && {
-				uci -q batch <<-EOF
-					delete network.${1}6
-					set network.${1}6='interface'
-					set network.${1}6.device='$device'
-					set network.${1}6.proto='dhcpv6'
-				EOF
-			}
 		;;
 
 		pppoe)
@@ -196,16 +188,8 @@ generate_network() {
 				set network.$1.proto='pppoe'
 				set network.$1.username='username'
 				set network.$1.password='password'
+				set network.$1.ipv6='auto'
 			EOF
-			[ -e /proc/sys/net/ipv6 ] && {
-				uci -q batch <<-EOF
-					set network.$1.ipv6='1'
-					delete network.${1}6
-					set network.${1}6='interface'
-					set network.${1}6.device='@${1}'
-					set network.${1}6.proto='dhcpv6'
-				EOF
-			}
 		;;
 
 		ncm|\
@@ -312,8 +296,8 @@ generate_static_system() {
 		delete system.@system[0]
 		add system system
 		set system.@system[-1].hostname='OpenWrt'
-		set system.@system[-1].timezone='GMT0'
-		set system.@system[-1].zonename='UTC'
+		set system.@system[-1].zonename='Asia/Chongqing'
+		set system.@system[-1].timezone='LST-7'
 		set system.@system[-1].ttylogin='0'
 		set system.@system[-1].log_size='128'
 		set system.@system[-1].urandom_seed='0'
@@ -321,11 +305,11 @@ generate_static_system() {
 		delete system.ntp
 		set system.ntp='timeserver'
 		set system.ntp.enabled='1'
-		set system.ntp.enable_server='0'
-		add_list system.ntp.server='0.openwrt.pool.ntp.org'
-		add_list system.ntp.server='1.openwrt.pool.ntp.org'
-		add_list system.ntp.server='2.openwrt.pool.ntp.org'
-		add_list system.ntp.server='3.openwrt.pool.ntp.org'
+		set system.ntp.enable_server='1'
+		add_list system.ntp.server='ntp.tencent.com'
+		add_list system.ntp.server='ntp1.aliyun.com'
+		add_list system.ntp.server='ntp.ntsc.ac.cn'
+		add_list system.ntp.server='ntp.neu.edu.cn'
 	EOF
 
 	if json_is_a system object; then
--- a/package/base-files/files/etc/board.d/99-default_network
+++ b/package/base-files/files/etc/board.d/99-default_network
@@ -8,8 +8,15 @@ board_config_update
 
 json_is_a network object && exit 0
 
-ucidef_set_interface_lan 'eth0'
-[ -d /sys/class/net/eth1 ] && ucidef_set_interface_wan 'eth1'
+A=$(ls /sys/class/net | grep -c eth)
+if [ $A -gt 1 ];then
+	let A=A-1
+	ucidef_set_interface_wan eth0
+	for i in $(seq 1 $A);do B="$B eth$i";done
+	ucidef_set_interface_lan "${B#* }"
+else
+	ucidef_set_interface_lan eth0
+fi
 
 board_config_flush
 
--- a/package/network/config/firewall/files/firewall.config
+++ b/package/network/config/firewall/files/firewall.config
@@ -1,206 +1,52 @@
+
 config defaults
-	option syn_flood	1
-	option input		REJECT
-	option output		ACCEPT
-	option forward		REJECT
-# Uncomment this line to disable ipv6 rules
-#	option disable_ipv6	1
+	option synflood_protect '1'
+	option input 'DROP'
+	option output 'ACCEPT'
+	option forward 'DROP'
+	option flow_offloading '1'
 
 config zone
-	option name		lan
-	list   network		'lan'
-	option input		ACCEPT
-	option output		ACCEPT
-	option forward		ACCEPT
+	option name 'lan'
+	option input 'ACCEPT'
+	option output 'ACCEPT'
+	option forward 'ACCEPT'
+	list network 'lan'
 
 config zone
-	option name		wan
-	list   network		'wan'
-	list   network		'wan6'
-	option input		REJECT
-	option output		ACCEPT
-	option forward		REJECT
-	option masq		1
-	option mtu_fix		1
+	option name 'wan'
+	option input 'DROP'
+	option output 'ACCEPT'
+	option forward 'DROP'
+	option masq '1'
+	option fullcone '1'
+	option mtu_fix '1'
+	list network 'wan'
 
 config forwarding
-	option src		lan
-	option dest		wan
-
-# We need to accept udp packets on port 68,
-# see https://dev.openwrt.org/ticket/4108
-config rule
-	option name		Allow-DHCP-Renew
-	option src		wan
-	option proto		udp
-	option dest_port	68
-	option target		ACCEPT
-	option family		ipv4
-
-# Allow IPv4 ping
-config rule
-	option name		Allow-Ping
-	option src		wan
-	option proto		icmp
-	option icmp_type	echo-request
-	option family		ipv4
-	option target		ACCEPT
-
-config rule
-	option name		Allow-IGMP
-	option src		wan
-	option proto		igmp
-	option family		ipv4
-	option target		ACCEPT
-
-# Allow DHCPv6 replies
-# see https://github.com/openwrt/openwrt/issues/5066
-config rule
-	option name		Allow-DHCPv6
-	option src		wan
-	option proto		udp
-	option dest_port	546
-	option family		ipv6
-	option target		ACCEPT
-
-config rule
-	option name		Allow-MLD
-	option src		wan
-	option proto		icmp
-	option src_ip		fe80::/10
-	list icmp_type		'130/0'
-	list icmp_type		'131/0'
-	list icmp_type		'132/0'
-	list icmp_type		'143/0'
-	option family		ipv6
-	option target		ACCEPT
-
-# Allow essential incoming IPv6 ICMP traffic
-config rule
-	option name		Allow-ICMPv6-Input
-	option src		wan
-	option proto	icmp
-	list icmp_type		echo-request
-	list icmp_type		echo-reply
-	list icmp_type		destination-unreachable
-	list icmp_type		packet-too-big
-	list icmp_type		time-exceeded
-	list icmp_type		bad-header
-	list icmp_type		unknown-header-type
-	list icmp_type		router-solicitation
-	list icmp_type		neighbour-solicitation
-	list icmp_type		router-advertisement
-	list icmp_type		neighbour-advertisement
-	option limit		1000/sec
-	option family		ipv6
-	option target		ACCEPT
+	option src 'lan'
+	option dest 'wan'
 
-# Allow essential forwarded IPv6 ICMP traffic
-config rule
-	option name		Allow-ICMPv6-Forward
-	option src		wan
-	option dest		*
-	option proto		icmp
-	list icmp_type		echo-request
-	list icmp_type		echo-reply
-	list icmp_type		destination-unreachable
-	list icmp_type		packet-too-big
-	list icmp_type		time-exceeded
-	list icmp_type		bad-header
-	list icmp_type		unknown-header-type
-	option limit		1000/sec
-	option family		ipv6
-	option target		ACCEPT
-
-config rule
-	option name		Allow-IPSec-ESP
-	option src		wan
-	option dest		lan
-	option proto		esp
-	option target		ACCEPT
+config include
+	option path '/etc/firewall.user'
 
 config rule
-	option name		Allow-ISAKMP
-	option src		wan
-	option dest		lan
-	option dest_port	500
-	option proto		udp
-	option target		ACCEPT
+	option name 'Allow-DHCPv6'
+	option family 'ipv6'
+	list proto 'udp'
+	option src 'wan'
+	list dest_ip 'fc00::/6'
+	option dest_port '546'
+	option target 'ACCEPT'
 
-# allow interoperability with traceroute classic
-# note that traceroute uses a fixed port range, and depends on getting
-# back ICMP Unreachables.  if we're operating in DROP mode, it won't
-# work so we explicitly REJECT packets on these ports.
 config rule
-	option name		Support-UDP-Traceroute
-	option src		wan
-	option dest_port	33434:33689
-	option proto		udp
-	option family		ipv4
-	option target		REJECT
-	option enabled		0
-
-# include a file with users custom iptables rules
-config include
-	option path /etc/firewall.user
-
-
-### EXAMPLE CONFIG SECTIONS
-# do not allow a specific ip to access wan
-#config rule
-#	option src		lan
-#	option src_ip	192.168.45.2
-#	option dest		wan
-#	option proto	tcp
-#	option target	REJECT
-
-# block a specific mac on wan
-#config rule
-#	option dest		wan
-#	option src_mac	00:11:22:33:44:66
-#	option target	REJECT
-
-# block incoming ICMP traffic on a zone
-#config rule
-#	option src		lan
-#	option proto	ICMP
-#	option target	DROP
-
-# port redirect port coming in on wan to lan
-#config redirect
-#	option src			wan
-#	option src_dport	80
-#	option dest			lan
-#	option dest_ip		192.168.16.235
-#	option dest_port	80
-#	option proto		tcp
-
-# port redirect of remapped ssh port (22001) on wan
-#config redirect
-#	option src		wan
-#	option src_dport	22001
-#	option dest		lan
-#	option dest_port	22
-#	option proto		tcp
-
-### FULL CONFIG SECTIONS
-#config rule
-#	option src		lan
-#	option src_ip	192.168.45.2
-#	option src_mac	00:11:22:33:44:55
-#	option src_port	80
-#	option dest		wan
-#	option dest_ip	194.25.2.129
-#	option dest_port	120
-#	option proto	tcp
-#	option target	REJECT
+	option name 'Allow-NDP'
+	option family 'ipv6'
+	list proto 'icmp'
+	option src 'wan'
+	list icmp_type 'neighbour-advertisement'
+	list icmp_type 'neighbour-solicitation'
+	list icmp_type 'redirect'
+	list icmp_type 'router-advertisement'
+	option target 'ACCEPT'
 
-#config redirect
-#	option src		lan
-#	option src_ip	192.168.45.2
-#	option src_mac	00:11:22:33:44:55
-#	option src_port		1024
-#	option src_dport	80
-#	option dest_ip	194.25.2.129
-#	option dest_port	120
-#	option proto	tcp
--- a/package/network/services/dnsmasq/files/dhcp.conf
+++ b/package/network/services/dnsmasq/files/dhcp.conf
@@ -1,37 +1,25 @@
+
 config dnsmasq
-	option domainneeded	1
-	option boguspriv	1
-	option filterwin2k	0  # enable for dial on demand
-	option localise_queries	1
-	option rebind_protection 1  # disable if upstream must serve RFC1918 addresses
-	option rebind_localhost 1  # enable for RBL checking and similar services
-	#list rebind_domain example.lan  # whitelist RFC1918 responses for domains
-	option local	'/lan/'
-	option domain	'lan'
-	option expandhosts	1
-	option nonegcache	0
-	option cachesize	1000
-	option authoritative	1
-	option readethers	1
-	option leasefile	'/tmp/dhcp.leases'
-	option resolvfile	'/tmp/resolv.conf.d/resolv.conf.auto'
-	#list server		'/mycompany.local/1.2.3.4'
-	option nonwildcard	1 # bind to & keep track of interfaces
-	#list interface		br-lan
-	#list notinterface	lo
-	#list bogusnxdomain     '64.94.110.11'
-	option localservice	1  # disable to allow DNS requests from non-local subnets
-	option ednspacket_max	1232
-	option filter_aaaa	0
-	option filter_a		0
-	#list addnmount		/some/path # read-only mount path to expose it to dnsmasq
+	option domainneeded '1'
+	option authoritative '1'
+	option local '/lan/'
+	option domain 'lan'
+	option rebind_protection '1'
+	option rebind_localhost '1'
+	option localservice '0'
+	option nonwildcard '0'
+	option readethers '1'
+	option leasefile '/tmp/dhcp.leases'
+	option sequential_ip '1'
+	option localise_queries '1'
+	option expandhosts '1'
+	option ednspacket_max '1232'
+	option cachesize '1000'
 
-config dhcp lan
-	option interface	lan
-	option start 	100
-	option limit	150
-	option leasetime	12h
+config dhcp 'lan'
+	option interface 'lan'
+	option start '10'
+	option limit '150'
+	option leasetime '2h'
+	option force '1'
 
-config dhcp wan
-	option interface	wan
-	option ignore	1
--- a/package/network/services/odhcpd/files/odhcpd.defaults
+++ b/package/network/services/odhcpd/files/odhcpd.defaults
@@ -11,41 +11,20 @@ json_get_vars protocol
 json_select ..
 json_select ..
 
-ODHCPDONLY=0
-V4MODE=disabled
-V6MODE=disabled
-
-[ -e /usr/sbin/dnsmasq ] || ODHCPDONLY=1
-
 case "$protocol" in
 # only enable server mode on statically addressed lan ports
-"static")
-	V4MODE=server
-	[ -e /proc/sys/net/ipv6 ] && V6MODE=server
-	;;
+"static") [ -e /proc/sys/net/ipv6 ] && MODE=server || MODE=disabled ;;
+*) MODE=disabled ;;
 esac
 
-uci get dhcp.lan 1>/dev/null 2>/dev/null || {
-uci batch <<EOF
-set dhcp.lan=dhcp
-set dhcp.lan.interface='lan'
-set dhcp.lan.start='100'
-set dhcp.lan.limit='150'
-set dhcp.lan.leasetime='12h'
-set dhcp.lan.domain='lan'
-EOF
-}
-
 uci batch <<EOF
 set dhcp.odhcpd=odhcpd
-set dhcp.odhcpd.maindhcp=$ODHCPDONLY
+set dhcp.odhcpd.maindhcp=0
 set dhcp.odhcpd.leasefile=/tmp/hosts/odhcpd
 set dhcp.odhcpd.leasetrigger=/usr/sbin/odhcpd-update
 set dhcp.odhcpd.loglevel=4
-set dhcp.lan.dhcpv4=$V4MODE
-set dhcp.lan.dhcpv6=$V6MODE
-set dhcp.lan.ra=$V6MODE
-set dhcp.lan.ra_slaac=1
+set dhcp.lan.ra=$MODE
+set dhcp.lan.dhcpv6=$MODE
 add_list dhcp.lan.ra_flags=managed-config
 add_list dhcp.lan.ra_flags=other-config
 commit dhcp
--- a/package/network/services/ppp/files/lib/netifd/ppp6-up
+++ b/package/network/services/ppp/files/lib/netifd/ppp6-up
@@ -26,9 +26,11 @@ if [ -n "$AUTOIPV6" ]; then
 	[ -n "$ZONE" ] && json_add_string zone "$ZONE"
 	[ -n "$EXTENDPREFIX" ] && json_add_string extendprefix 1
 	[ -n "$IP6TABLE" ] && json_add_string ip6table $IP6TABLE
+	[ -n "$REQPREFIX" ] && json_add_string reqprefix $REQPREFIX
 	[ -n "$PEERDNS" ] && json_add_boolean peerdns $PEERDNS
 	[ "$NOSOURCEFILTER" = "1" ] && json_add_boolean sourcefilter "0"
 	[ "$DELEGATE" = "0" ] && json_add_boolean delegate "0"
+	[ -n "$NORELEASE" ] && json_add_string norelease 1
 	json_close_object
 	ubus call network add_dynamic "$(json_dump)"
 fi
--- a/package/network/services/ppp/files/ppp.sh
+++ b/package/network/services/ppp/files/ppp.sh
@@ -79,18 +79,20 @@ ppp_generic_init_config() {
 	proto_config_add_int mtu
 	proto_config_add_string pppname
 	proto_config_add_string unnumbered
+	proto_config_add_string reqprefix
 	proto_config_add_boolean persist
 	proto_config_add_int maxfail
 	proto_config_add_int holdoff
 	proto_config_add_boolean sourcefilter
 	proto_config_add_boolean delegate
+	proto_config_add_boolean norelease
 }
 
 ppp_generic_setup() {
 	local config="$1"; shift
 	local localip
 
-	json_get_vars ip6table demand keepalive keepalive_adaptive username password pppd_options pppname unnumbered persist maxfail holdoff peerdns sourcefilter delegate
+	json_get_vars ip6table demand keepalive keepalive_adaptive username password pppd_options pppname unnumbered reqprefix persist maxfail holdoff peerdns sourcefilter delegate norelease
 
 	[ ! -e /proc/sys/net/ipv6 ] && ipv6=0 || json_get_var ipv6 ipv6
 
@@ -101,6 +103,11 @@ ppp_generic_setup() {
 		autoipv6=1
 	fi
 
+	if [ "$autoipv6" != 1 ]; then
+		reqprefix=""
+		norelease=""
+	fi
+
 	if [ "${demand:-0}" -gt 0 ]; then
 		demand="precompiled-active-filter /etc/ppp/filter demand idle $demand"
 	else
@@ -137,6 +144,7 @@ ppp_generic_setup() {
 	[ -n "$disconnect" ] || json_get_var disconnect disconnect
 	[ "$sourcefilter" = "0" ] || sourcefilter=""
 	[ "$delegate" != "0" ] && delegate=""
+	[ "$norelease" = "1" ] || norelease=""
 
 	proto_run_command "$config" /usr/sbin/pppd \
 		nodetach ipparam "$config" \
@@ -145,6 +153,8 @@ ppp_generic_setup() {
 		${lcp_failure:+lcp-echo-interval $lcp_interval lcp-echo-failure $lcp_failure $lcp_adaptive} \
 		${ipv6:++ipv6} \
 		${autoipv6:+set AUTOIPV6=1} \
+		${reqprefix:+set REQPREFIX=$reqprefix} \
+		${norelease:+set NORELEASE=1} \
 		${ip6table:+set IP6TABLE=$ip6table} \
 		${peerdns:+set PEERDNS=$peerdns} \
 		${sourcefilter:+set NOSOURCEFILTER=1} \
@@ -215,6 +225,7 @@ proto_pppoe_init_config() {
 	ppp_generic_init_config
 	proto_config_add_string "ac"
 	proto_config_add_string "service"
+	proto_config_add_string "ac_mac"
 	proto_config_add_string "host_uniq"
 	proto_config_add_int "padi_attempts"
 	proto_config_add_int "padi_timeout"
@@ -233,6 +244,7 @@ proto_pppoe_setup() {
 
 	json_get_var ac ac
 	json_get_var service service
+	json_get_var ac_mac ac_mac
 	json_get_var host_uniq host_uniq
 	json_get_var padi_attempts padi_attempts
 	json_get_var padi_timeout padi_timeout
@@ -241,6 +253,7 @@ proto_pppoe_setup() {
 		plugin pppoe.so \
 		${ac:+rp_pppoe_ac "$ac"} \
 		${service:+rp_pppoe_service "$service"} \
+		${ac_mac:+pppoe-mac "$ac_mac"} \
 		${host_uniq:+host-uniq "$host_uniq"} \
 		${padi_attempts:+pppoe-padi-attempts $padi_attempts} \
 		${padi_timeout:+pppoe-padi-timeout $padi_timeout} \
--- a/package/network/services/uhttpd/files/uhttpd.config
+++ b/package/network/services/uhttpd/files/uhttpd.config
@@ -1,151 +1,31 @@
-# Server configuration
-config uhttpd main
 
-	# HTTP listen addresses, multiple allowed
-	list listen_http	0.0.0.0:80
-	list listen_http	[::]:80
+config uhttpd 'main'
+	list listen_http '0.0.0.0:80'
+	list listen_http '[::]:80'
+	list listen_https '0.0.0.0:443'
+	list listen_https '[::]:443'
+	option redirect_https '0'
+	option home '/www'
+	option rfc1918_filter '1'
+	option max_requests '3'
+	option max_connections '100'
+	option cert '/etc/uhttpd.crt'
+	option key '/etc/uhttpd.key'
+	option cgi_prefix '/cgi-bin'
+	list lua_prefix '/cgi-bin/luci=/usr/lib/lua/luci/sgi/uhttpd.lua'
+	option script_timeout '60'
+	option network_timeout '30'
+	option http_keepalive '20'
+	option tcp_keepalive '1'
+	option ubus_prefix '/ubus'
+
+config cert 'defaults'
+	option days '397'
+	option key_type 'ec'
+	option bits '2048'
+	option ec_curve 'P-256'
+	option country 'ZZ'
+	option state 'Somewhere'
+	option location 'Unknown'
+	option commonname '%D'
 
-	# HTTPS listen addresses, multiple allowed
-	list listen_https	0.0.0.0:443
-	list listen_https	[::]:443
-
-	# Redirect HTTP requests to HTTPS if possible
-	option redirect_https	0
-
-	# Server document root
-	option home		/www
-
-	# Reject requests from RFC1918 IP addresses
-	# directed to the servers public IP(s).
-	# This is a DNS rebinding countermeasure.
-	option rfc1918_filter 1
-
-	# Maximum number of concurrent requests.
-	# If this number is exceeded, further requests are
-	# queued until the number of running requests drops
-	# below the limit again.
-	option max_requests 3
-
-	# Maximum number of concurrent connections.
-	# If this number is exceeded, further TCP connection
-	# attempts are queued until the number of active
-	# connections drops below the limit again.
-	option max_connections 100
-
-	# Certificate and private key for HTTPS.
-	# If no listen_https addresses are given,
-	# the key options are ignored.
-	option cert		/etc/uhttpd.crt
-	option key		/etc/uhttpd.key
-
-	# CGI url prefix, will be searched in docroot.
-	# Default is /cgi-bin
-	option cgi_prefix	/cgi-bin
-
-	# List of extension->interpreter mappings.
-	# Files with an associated interpreter can
-	# be called outside of the CGI prefix and do
-	# not need to be executable.
-#	list interpreter	".php=/usr/bin/php-cgi"
-#	list interpreter	".cgi=/usr/bin/perl"
-
-	# List of prefix->Lua handler mappings.
-	# Any request to an URL beneath the prefix
-	# will be dispatched to the associated Lua
-	# handler script. Lua support is disabled when
-	# no handler mappings are specified. Lua prefix
-	# matches have precedence over the CGI prefix.
-	list lua_prefix		"/cgi-bin/luci=/usr/lib/lua/luci/sgi/uhttpd.lua"
-
-	# List of prefix->ucode handler mappings.
-	# Any request to an URL beneath the prefix
-	# will be dispatched to the associated ucode
-	# handler script. Ucode support is disabled when
-	# no handler mappings are specified. Ucode prefix
-	# matches have precedence over the CGI prefix.
-#	list ucode_prefix		"/ucode/example=/usr/share/example.uc"
-
-	# Specify the ubus-rpc prefix and socket path.
-#	option ubus_prefix	/ubus
-#	option ubus_socket	/var/run/ubus/ubus.sock
-
-	# CGI/Lua timeout, if the called script does not
-	# write data within the given amount of seconds,
-	# the server will terminate the request with
-	# 504 Gateway Timeout response.
-	option script_timeout	60
-
-	# Network timeout, if the current connection is
-	# blocked for the specified amount of seconds,
-	# the server will terminate the associated
-	# request process.
-	option network_timeout	30
-
-	# HTTP Keep-Alive, specifies the timeout for persistent
-	# HTTP/1.1 connections. Setting this to 0 will disable
-	# persistent HTTP connections.
-	option http_keepalive	20
-
-	# TCP Keep-Alive, send periodic keep-alive probes
-	# over established connections to detect dead peers.
-	# The value is given in seconds to specify the
-	# interval between subsequent probes.
-	# Setting this to 0 will disable TCP keep-alive.
-	option tcp_keepalive	1
-
-	# Basic auth realm, defaults to local hostname
-#	option realm	OpenWrt
-
-	# Configuration file in busybox httpd format
-#	option config	/etc/httpd.conf
-
-	# Do not follow symlinks that point outside of the
-	# home directory.
-#	option no_symlinks	0
-
-	# Do not produce directory listings but send 403
-	# instead if a client requests an url pointing to
-	# a directory without any index file.
-#	option no_dirlists	0
-
-	# Do not authenticate any ubus-rpc requests against
-	# the ubus session/access procedure.
-	# This is dangerous and should be always left off
-	# except for development and debug purposes!
-#	option no_ubusauth	0
-
-	# For this instance of uhttpd use the listed httpauth
-	# sections to require Basic auth to the specified
-	# resources.
-#	list httpauth prefix_user
-
-
-# Defaults for automatic certificate and key generation
-config cert defaults
-
-	# Validity time, 397 days is maximum allowed by CA/Browser forum
-	option days		397
-
-	# key type: rsa or ec
-	option key_type		ec
-
-	# RSA key size
-	option bits		2048
-
-	# EC curve name
-	# Curve names vary between px5g-{wolfssl,mbedtls} and openssl
-	# P-256 or P-384 are guaranteed to work
-	option ec_curve		P-256
-
-	# Location
-	option country		ZZ
-	option state		Somewhere
-	option location		Unknown
-
-	# Common name
-	option commonname	'%D'
-
-# config httpauth prefix_user
-#	option prefix /protected/url/path
-#	option username user
-#	option password 'plaintext_or_md5_or_$p$user_for_system_user'

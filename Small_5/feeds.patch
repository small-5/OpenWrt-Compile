--- a/feeds/luci/luci.mk
+++ b/feeds/luci/luci.mk
@@ -51,8 +51,8 @@ LUCI_LANG.sv=Svenska (Swedish)
 LUCI_LANG.tr=Türkçe (Turkish)
 LUCI_LANG.uk=Українська (Ukrainian)
 LUCI_LANG.vi=Tiếng Việt (Vietnamese)
+LUCI_LANG.zh_Hant=正體中文 (Chinese Traditional)
 LUCI_LANG.zh_Hans=简体中文 (Chinese Simplified)
-LUCI_LANG.zh_Hant=繁體中文 (Chinese Traditional)
 #LUCI_LANG_END
 
 # Submenu titles
@@ -67,8 +67,8 @@ LUCI_MENU.lib=6. Libraries
 LUCI_LC_ALIAS.bn_BD=bn
 LUCI_LC_ALIAS.nb_NO=no
 LUCI_LC_ALIAS.pt_BR=pt-br
-LUCI_LC_ALIAS.zh_Hans=zh-cn
 LUCI_LC_ALIAS.zh_Hant=zh-tw
+LUCI_LC_ALIAS.zh_Hans=zh-cn
 
 # Default locations
 HTDOCS = /www
--- a/feeds/luci/applications/luci-app-aria2/root/usr/share/luci/menu.d/luci-app-aria2.json
+++ b/feeds/luci/applications/luci-app-aria2/root/usr/share/luci/menu.d/luci-app-aria2.json
@@ -1,5 +1,5 @@
 {
-	"admin/services/aria2": {
+	"admin/nas/aria2": {
 		"title": "Aria2",
 		"order": 30,
 		"action": {
@@ -11,7 +11,7 @@
 		}
 	},
 
-	"admin/services/aria2/config": {
+	"admin/nas/aria2/config": {
 		"title": "Configuration",
 		"order": 10,
 		"action": {
@@ -20,7 +20,7 @@
 		}
 	},
 
-	"admin/services/aria2/files": {
+	"admin/nas/aria2/files": {
 		"title": "Files",
 		"order": 20,
 		"action": {
@@ -29,7 +29,7 @@
 		}
 	},
 
-	"admin/services/aria2/log": {
+	"admin/nas/aria2/log": {
 		"title": "Log",
 		"order": 30,
 		"action": {
--- a/feeds/luci/applications/luci-app-ddns/htdocs/luci-static/resources/view/ddns/overview.js
+++ b/feeds/luci/applications/luci-app-ddns/htdocs/luci-static/resources/view/ddns/overview.js
@@ -56,6 +56,18 @@
 		expect: {  }
 	}),
 
+	callReloadDDnsRule: rpc.declare({
+		object: 'luci.ddns',
+		method: 'reload_ddns_rule',
+		params: [ 'id' ]
+	}),
+
+	callStopDDnsRule: rpc.declare({
+		object: 'luci.ddns',
+		method: 'stop_ddns_rule',
+		params: [ 'id' ]
+	}),
+
 	services: {},
 
 	/*
@@ -152,17 +164,14 @@
 	},
 
 	handleReloadDDnsRule: function(m, section_id, ev) {
-		return fs.exec('/usr/lib/ddns/dynamic_dns_lucihelper.sh',
-							[ '-S', section_id, '--', 'start' ])
-			.then(L.bind(m.load, m))
-			.then(L.bind(m.render, m))
+		return this.callReloadDDnsRule(section_id)
+			.then(L.bind(this.render, this))
 			.catch(function(e) { ui.addNotification(null, E('p', e.message)) });
 	},
 
 	HandleStopDDnsRule: function(m, section_id, ev) {
-		return fs.exec('/usr/lib/ddns/dynamic_dns_lucihelper.sh',
-							[ '-S', section_id, '--', 'start' ])
-			.then(L.bind(m.render, m))
+		return this.callStopDDnsRule(section_id)
+			.then(L.bind(this.render, this))
 			.catch(function(e) { ui.addNotification(null, E('p', e.message)) });
 	},
 
@@ -176,7 +185,7 @@
 
 	handleRestartDDns: function(m, ev) {
 		return this.callInitAction('ddns', 'restart')
-			.then(L.bind(m.render, m));
+			.then(L.bind(this.render, this));
 	},
 
 	poll_status: function(map, data) {
@@ -485,6 +494,7 @@
 					uci.set('ddns', section_id, 'service_name', service_value);
 				}
 				uci.set('ddns', section_id, 'use_ipv6', ipv6_value);
+				ui.hideModal();
 			}).then(L.bind(m.children[1].renderMoreOptionsModal, m.children[1], section_id));
 		};
 
--- a/feeds/luci/applications/luci-app-ddns/root/usr/share/rpcd/ucode/ddns.uc
+++ b/feeds/luci/applications/luci-app-ddns/root/usr/share/rpcd/ucode/ddns.uc
@@ -12,11 +12,6 @@ const ddns_log_path = '/var/log/ddns';
 const ddns_package_path = '/usr/share/ddns';
 const ddns_run_path = '/var/run/ddns';
 const luci_helper = '/usr/lib/ddns/dynamic_dns_lucihelper.sh';
-const srv_name    = 'ddns-scripts';
-const opkg_info_path    = '/usr/lib/opkg/info';
-
-
-
 
 function get_dateformat() {
 	return uci.get('ddns', 'global', 'ddns_dateformat') || '%F %R';
@@ -158,19 +153,26 @@ const methods = {
 					s['check_unit'] || 'minutes'
 				);
 
-				let convertedLastUpdate;
+				let convertedLastUpdate, timegap;
 				if (lastUpdate > 0) {
 					const epoch = time() - _uptime + lastUpdate;
 					convertedLastUpdate = epoch2date(epoch);
 					// convertedLastUpdate = get_date(epoch, dateFormat);
-					nextUpdate = epoch2date(epoch + forceSeconds + checkSeconds);
-					// nextUpdate = get_date(epoch + forceSeconds + checkSeconds, dateFormat);
+					if (forceSeconds <= checkSeconds) {
+						timegap = checkSeconds;
+					} else {
+						timegap = forceSeconds - checkSeconds;
+						while (timegap > checkSeconds)
+							timegap = timegap - checkSeconds;
+					}
+					nextUpdate = epoch2date(epoch + forceSeconds + checkSeconds - timegap);
+					// nextUpdate = get_date(epoch + forceSeconds + checkSeconds - timegap, dateFormat);
 				}
 
-				if (pid > 0 && (lastUpdate + forceSeconds + checkSeconds - _uptime) <= 0) {
-					nextUpdate = 'Verify';
-				} else if (forceSeconds === 0) {
+				if (forceSeconds == 0) {
 					nextUpdate = 'Run once';
+				} else if (pid > 0 && (lastUpdate + forceSeconds + checkSeconds - timegap - _uptime) <= 0) {
+					nextUpdate = 'Verify';
 				} else if (pid == 0 && s['enabled'] == '0') {
 					nextUpdate = 'Disabled';
 				} else if (pid == 0 && s['enabled'] != '0') {
@@ -197,21 +199,8 @@ const methods = {
 			const services_mtime = stat(ddns_package_path + '/list')?.mtime;
 			// uci.unload('ddns');
 			let res = {};
-			let ver, control;
-
-			if (stat(opkg_info_path + `/${srv_name}.control`)?.type == 'file') {
-				control = readfile(opkg_info_path + `/${srv_name}.control`);
-			}
-
-			for (let line in split(control, '\n')) {
-				ver = match(line, /^Version: (.+)$/)?.[1];
-				if ( ver && length(ver) > 0 )
-					break;
-			}
 
-			ver = ver || trimnonewline(popen(`${luci_helper} -V | awk {'print $2'}`, 'r')?.read?.('line'));
-
-			res['_version'] = ver;
+			res['_version'] = trimnonewline(popen(`${luci_helper} -V | awk {'print $2'}`, 'r')?.read?.('line'));
 			res['_enabled'] = init_enabled('ddns');
 			// res['_curr_dateformat'] = get_date(time(), dateFormat);
 			res['_curr_dateformat'] = epoch2date(time());
@@ -324,6 +313,22 @@ const methods = {
 
 			return res;
 		}
+	},
+
+	reload_ddns_rule: {
+		args: { id: 'id' },
+		call: function(request) {
+			const result = system(`${luci_helper} -S ${request.args.id} -- start &`) == 0 ? true: false;
+			return { result: result }; 
+		}
+	},
+
+	stop_ddns_rule: {
+		args: { id: 'id' },
+		call: function(request) {
+			const result = system(`kill $(cat /tmp/run/ddns/${request.args.id}.pid) 2>/dev/null`) == 0 ? true: false;
+			return { result: result }; 
+		}
 	}
 };
 
--- a/feeds/luci/applications/luci-app-ddns/root/usr/share/rpcd/acl.d/luci-app-ddns.json
+++ b/feeds/luci/applications/luci-app-ddns/root/usr/share/rpcd/acl.d/luci-app-ddns.json
@@ -3,7 +3,7 @@
 		"description": "Grant access to ddns procedures",
 		"read": {
 			"ubus": {
-				"luci.ddns": [ "get_services_status", "get_ddns_state", "get_env", "get_services_log" ],
+				"luci.ddns": [ "get_services_status", "get_ddns_state", "get_env", "get_services_log", "reload_ddns_rule", "stop_ddns_rule" ],
 				"luci": [ "setInitAction" ]
 			},
 			"file": {
--- a/feeds/luci/applications/luci-app-firewall/htdocs/luci-static/resources/view/firewall/zones.js
+++ b/feeds/luci/applications/luci-app-firewall/htdocs/luci-static/resources/view/firewall/zones.js
@@ -173,10 +173,32 @@ return view.extend({
 			var masq_dest = uci.get('firewall', section_id, 'masq_dest')
 			if ((!family || family.indexOf('6') == -1) && (masq_src || masq_dest))
 				return _('Limited masquerading enabled');
-
 			return null;
 		};
 
+		if (fw4) {
+			o = s.taboption('general', form.Flag, 'masq6', _('IPv6 Masquerading'),
+				_('Enable network address and port translation IPv6 (NAT6 or NAPT6) for outbound traffic on this zone.'));
+			o.editable = true;
+			o.tooltip = function(section_id) {
+				var family = uci.get('firewall', section_id, 'family')
+				var masq_src = uci.get('firewall', section_id, 'masq_src')
+				var masq_dest = uci.get('firewall', section_id, 'masq_dest')
+				if ((!family || family.indexOf('6') >= 0) && (masq_src || masq_dest))
+					return _('Limited masquerading enabled');
+				return null;
+			};
+		}
+
+		if (L.hasSystemFeature('fullcone')) {
+			o = s.taboption('general', form.Flag, 'fullcone', _('Full Cone NAT'));
+			o.editable = true;
+			if (fw4) {
+				o = s.taboption('general', form.Flag, 'fullcone6', _('Full Cone NAT6'));
+				o.editable = true;
+			}
+		}
+
 		o = s.taboption('general', form.Flag, 'mtu_fix', _('MSS clamping'));
 		o.modalonly = true;
 
@@ -238,20 +260,6 @@ return view.extend({
 		o.modalonly = true;
 		o.multiple = true;
 
-		if (fw4) {
-			o = s.taboption('advanced', form.Flag, 'masq6', _('IPv6 Masquerading'),
-				_('Enable network address and port translation IPv6 (NAT6 or NAPT6) for outbound traffic on this zone.'));
-			o.modalonly = true;
-			o.tooltip = function(section_id) {
-				var family = uci.get('firewall', section_id, 'family')
-				var masq_src = uci.get('firewall', section_id, 'masq_src')
-				var masq_dest = uci.get('firewall', section_id, 'masq_dest')
-				if ((!family || family.indexOf('6') >= 0) && (masq_src || masq_dest))
-					return _('Limited masquerading enabled');
-				return null;
-			};
-		}
-
 		o = s.taboption('advanced', form.ListValue, 'family', _('Restrict to address family'));
 		o.value('', _('IPv4 and IPv6'));
 		o.value('ipv4', _('IPv4 only'));
--- a/feeds/luci/applications/luci-app-ksmbd/root/usr/share/luci/menu.d/luci-app-ksmbd.json
+++ b/feeds/luci/applications/luci-app-ksmbd/root/usr/share/luci/menu.d/luci-app-ksmbd.json
@@ -1,6 +1,7 @@
 {
-	"admin/services/ksmbd": {
+	"admin/nas/ksmbd": {
 		"title": "Network Shares",
+		"order": 2,
 		"action": {
 			"type": "view",
 			"path": "ksmbd"
--- a/feeds/luci/applications/luci-app-nft-qos/luasrc/controller/nft-qos.lua
+++ b/feeds/luci/applications/luci-app-nft-qos/luasrc/controller/nft-qos.lua
@@ -18,7 +18,7 @@ function index()
 	e.leaf = true
 	e.acl_depends = { "luci-app-nft-qos" }
 
-	e = entry({"admin", "services", "nft-qos"}, cbi("nft-qos/nft-qos"), _("QoS over Nftables"), 60)
+	e = entry({"admin", "network", "nft-qos"}, cbi("nft-qos/nft-qos"), _("QoS over Nftables"), 60)
 	e.leaf = true
 	e.acl_depends = { "luci-app-nft-qos" }
 end
--- a/feeds/luci/applications/luci-app-upnp/htdocs/luci-static/resources/view/upnp/upnp.js
+++ b/feeds/luci/applications/luci-app-upnp/htdocs/luci-static/resources/view/upnp/upnp.js
@@ -130,6 +130,9 @@
 		s.taboption('general', form.Flag, 'igdv1', _('Enable UPnP IGDv1 mode'),
 			_('Advertise as UPnP IGDv1 device (no IPv6) instead of IGDv2')).default = '0'
 
+		s.taboption('general', form.Flag, 'force_forwarding', _('Force forwarding'),
+			_('Force forwarding for private/reserved IP address'))
+
 		s.taboption('general', form.Flag, 'log_output', _('Enable additional logging'),
 			_('Puts extra debugging information into the system log'))
 
--- a/feeds/luci/applications/luci-app-upnp/po/zh_Hant/upnp.po
+++ b/feeds/luci/applications/luci-app-upnp/po/zh_Hant/upnp.po
@@ -229,3 +229,9 @@ msgstr "使用 STUN"
 #: applications/luci-app-upnp/htdocs/luci-static/resources/view/upnp/upnp.js:140
 msgid "Value in KByte/s, informational only"
 msgstr "值 (KByte/s) 僅供參考"
+
+msgid "Force forwarding"
+msgstr "強制轉發"
+
+msgid "Force forwarding for private/reserved IP address"
+msgstr "爲私有/保留IP位址開啟強制轉發"
--- a/feeds/luci/modules/luci-base/root/etc/config/luci
+++ b/feeds/luci/modules/luci-base/root/etc/config/luci
@@ -1,5 +1,5 @@
 config core main
-	option lang auto
+	option lang zh_tw
 	option mediaurlbase /luci-static/bootstrap
 	option resourcebase /luci-static/resources
 	option ubuspath /ubus/
--- a/feeds/luci/modules/luci-base/root/usr/share/rpcd/ucode/luci
+++ b/feeds/luci/modules/luci-base/root/usr/share/rpcd/ucode/luci
@@ -8,7 +8,7 @@ import { cursor } from 'uci';
 
 import { init_list, init_index, init_enabled, init_action, conntrack_list, process_list } from 'luci.sys';
 import { revision, branch } from 'luci.version';
-import { statvfs, uname } from 'luci.core';
+import { statvfs } from 'luci.core';
 
 import timezones from 'luci.zoneinfo';
 
@@ -197,6 +197,7 @@ const methods = {
 				firewall4:  access('/sbin/fw4') == true,
 				opkg:       access('/bin/opkg') == true,
 				offloading: access('/sys/module/xt_FLOWOFFLOAD/refcnt') == true || access('/sys/module/nft_flow_offload/refcnt') == true,
+				fullcone:   access('/sys/module/xt_FULLCONENAT/refcnt') == true || access('/sys/module/nft_fullcone/refcnt') == true,
 				br2684ctl:  access('/usr/sbin/br2684ctl') == true,
 				swconfig:   access('/sbin/swconfig') == true,
 				odhcpd:     access('/usr/sbin/odhcpd') == true,
@@ -541,46 +542,15 @@ const methods = {
 		}
 	},
 
-	getBuiltinEthernetPorts: {
+	getCPUInfo: {
 		call: function() {
-			let fd = open('/etc/board.json', 'r');
-			let board = fd ? json(fd) : {};
-			let ports = [];
-
-			for (let k in [ 'lan', 'wan' ]) {
-				if (!board?.network?.[k])
-					continue;
-
-				if (type(board.network[k].ports) == 'array') {
-					for (let ifname in board.network[k].ports) {
-						push(ports, { role: k, device: ifname });
-					}
-				}
-				else if (type(board.network[k].device) == 'string') {
-					push(ports, { role: k, device: board.network[k].device });
-				}
-			}
-
-			/* Workaround for targets that do not enumerate  all netdevs in board.json */
-			if (uname().machine in [ 'x86_64' ] &&
-			    match(ports[0]?.device, /^eth\d+$/)) {
-				let bus = readlink(`/sys/class/net/${ports[0].device}/device/subsystem`);
-
-				for (let netdev in lsdir('/sys/class/net')) {
-					if (!match(netdev, /^eth\d+$/))
-						continue;
-
-					if (length(filter(ports, port => port.device == netdev)))
-						continue;
-
-					if (readlink(`/sys/class/net/${netdev}/device/subsystem`) != bus)
-						continue;
-
-					push(ports, { role: 'unknown', device: netdev });
-				}
-			}
+			return { result: popen('top -n1 | awk \'/^CPU/ {printf("%d%",100-$8)}\'').read('all') };
+		}
+	},
 
-			return { result: ports };
+	getTZ: {
+		call: function() {
+			return { result: replace(popen('cat /tmp/TZ').read('all'),'\n','') };
 		}
 	}
 };
--- a/feeds/luci/modules/luci-compat/luasrc/view/cbi/full_valuefooter.htm
+++ b/feeds/luci/modules/luci-compat/luasrc/view/cbi/full_valuefooter.htm
@@ -1,6 +1,5 @@
 		<% if self.description and #self.description > 0 then -%>
 			<% if not luci.util.instanceof(self, luci.cbi.DynamicList) and (not luci.util.instanceof(self, luci.cbi.Flag) or self.orientation == "horizontal") then -%>
-				<br />
 			<%- end %>
 			<div class="cbi-value-description">
 				<%=self.description%>
--- a/feeds/luci/modules/luci-mod-network/htdocs/luci-static/resources/view/network/interfaces.js
+++ b/feeds/luci/modules/luci-mod-network/htdocs/luci-static/resources/view/network/interfaces.js
@@ -648,10 +648,12 @@ return view.extend({
 										uci.add('dhcp', 'dhcp', section_id);
 										uci.set('dhcp', section_id, 'interface', section_id);
 
-										if (protoval == 'static') {
-											uci.set('dhcp', section_id, 'start', 100);
+										if (protoval == 'static' || protoval == 'n2n') {
+											uci.set('dhcp', section_id, 'start', 10);
 											uci.set('dhcp', section_id, 'limit', 150);
-											uci.set('dhcp', section_id, 'leasetime', '12h');
+											uci.set('dhcp', section_id, 'leasetime', '2h');
+											uci.set('dhcp', section_id, 'force', 1);
+											uci.set('dhcp', section_id, 'ra_useleasetime', 1);
 										}
 										else {
 											uci.set('dhcp', section_id, 'ignore', 1);
@@ -664,11 +666,11 @@ return view.extend({
 
 					ss.taboption('general', form.Flag, 'ignore', _('Ignore interface'), _('Disable <abbr title="Dynamic Host Configuration Protocol">DHCP</abbr> for this interface.'));
 
-					if (protoval == 'static') {
+					if (protoval == 'static' || protoval == 'n2n') {
 						so = ss.taboption('general', form.Value, 'start', _('Start'), _('Lowest leased address as offset from the network address.'));
 						so.optional = true;
 						so.datatype = 'or(uinteger,ip4addr("nomask"))';
-						so.default = '100';
+						so.default = '10';
 
 						so = ss.taboption('general', form.Value, 'limit', _('Limit'), _('Maximum number of leased addresses.'));
 						so.optional = true;
@@ -677,7 +679,7 @@ return view.extend({
 
 						so = ss.taboption('general', form.Value, 'leasetime', _('Lease time'), _('Expiry time of leased addresses, minimum is 2 minutes (<code>2m</code>).'));
 						so.optional = true;
-						so.default = '12h';
+						so.default = '2h';
 
 						so = ss.taboption('advanced', form.Flag, 'dynamicdhcp', _('Dynamic <abbr title="Dynamic Host Configuration Protocol">DHCP</abbr>'), _('Dynamically allocate DHCP addresses for clients. If disabled, only clients having static leases will be served.'));
 						so.default = so.enabled;
--- a/feeds/luci/modules/luci-mod-status/root/usr/share/rpcd/acl.d/luci-mod-status-index.json
+++ b/feeds/luci/modules/luci-mod-status/root/usr/share/rpcd/acl.d/luci-mod-status-index.json
@@ -3,13 +3,12 @@
 		"description": "Grant access to main status display",
 		"read": {
 			"file": {
-				"/etc/board.json": [ "read" ],
 				"/proc/sys/net/netfilter/nf_conntrack_count": [ "read" ],
 				"/proc/sys/net/netfilter/nf_conntrack_max": [ "read" ],
 				"/www/luci-static/resources/view/status/include": [ "list" ]
 			},
 			"ubus": {
-				"luci": [ "getVersion" ],
+				"luci": [ "getVersion", "getCPUInfo", "getTZ" ],
 				"file": [ "list", "read" ],
 				"system": [ "board", "info" ]
 			}
--- a/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
+++ b/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
@@ -18,6 +18,16 @@ var callSystemInfo = rpc.declare({
 	method: 'info'
 });
 
+var callCPUInfo = rpc.declare({
+	object: 'luci',
+	method: 'getCPUInfo'
+});
+
+var callLuciTimezone = rpc.declare({
+	object: 'luci',
+	method: 'getTZ'
+});
+
 return baseclass.extend({
 	title: _('System'),
 
@@ -25,14 +35,18 @@ return baseclass.extend({
 		return Promise.all([
 			L.resolveDefault(callSystemBoard(), {}),
 			L.resolveDefault(callSystemInfo(), {}),
-			L.resolveDefault(callLuciVersion(), { revision: _('unknown version'), branch: 'LuCI' })
+			L.resolveDefault(callLuciVersion(), { revision: _('unknown version'), branch: 'LuCI' }),
+			L.resolveDefault(callCPUInfo(), {}),
+			L.resolveDefault(callLuciTimezone(), {})
 		]);
 	},
 
 	render: function(data) {
 		var boardinfo   = data[0],
 		    systeminfo  = data[1],
-		    luciversion = data[2];
+		    luciversion = data[2],
+		    cpuinfo     = data[3],
+		    timezone    = data[4];
 
 		luciversion = luciversion.branch + ' ' + luciversion.revision;
 
@@ -40,9 +54,20 @@ return baseclass.extend({
 
 		if (systeminfo.localtime) {
 			var date = new Date(systeminfo.localtime * 1000);
+			var Year = null;
+
+			switch(timezone.result) {
+				case 'CST-8': case 'HKT-8': case '':
+					datestr = '\u4e2d\u83ef\u6c11\u570b%d\u5e74%02d\u6708%02d\u65e5 %02d:%02d:%02d \u4e2d\u539f\u6a19\u6e96\u6642\u9593';
+					Year = date.getUTCFullYear() - 1911;
+					break;
+				default:
+					datestr = '%04d-%02d-%02d %02d:%02d:%02d';
+					Year = date.getUTCFullYear();
+			}
 
-			datestr = '%04d-%02d-%02d %02d:%02d:%02d'.format(
-				date.getUTCFullYear(),
+			datestr = datestr.format(
+				Year,
 				date.getUTCMonth() + 1,
 				date.getUTCDate(),
 				date.getUTCHours(),
@@ -64,7 +89,8 @@ return baseclass.extend({
 				systeminfo.load[0] / 65535.0,
 				systeminfo.load[1] / 65535.0,
 				systeminfo.load[2] / 65535.0
-			) : null
+			) : null,
+			_('CPU usage (%)'),    cpuinfo.result
 		];
 
 		var table = E('table', { 'class': 'table' });
--- a/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/routes.js
+++ b/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/routes.js
@@ -118,6 +118,7 @@ return view.extend({
 	parseRoute: function(s, networks, v6) {
 		var lines = s.trim().split(/\n/),
 		    res = [];
+		var k = 0;
 
 		for (var i = 0; i < lines.length; i++) {
 			var m = lines[i].match(/^(?:([a-z_]+|\d+) )?(default|[0-9a-f:.\/]+) (.+)$/),
@@ -138,11 +139,16 @@ return view.extend({
 			res.push([
 				E('span', { 'class': 'ifacebadge' }, [ net ? net : '(%s)'.format(flags.dev) ]),
 				dest,
-				(v6 ? flags.from : flags.via) || '-',
+				flags.via || '-',
 				String(flags.metric || 0),
 				flags.table || 'main',
-				flags.proto,
+				flags.proto
 			]);
+
+			if (v6) {
+				res[k].splice(3, 0, flags.from || '-');
+				k++;
+			}
 		}
 
 		return res;
@@ -221,6 +227,7 @@ return view.extend({
 			E('tr', { 'class': 'tr table-titles' }, [
 				E('th', { 'class': 'th', 'title': device_title }, [ _('Device') ]),
 				E('th', { 'class': 'th', 'title': target_title }, [ _('Target') ]),
+				E('th', { 'class': 'th', 'title': gateway_title }, [ _('Gateway') ]),
 				E('th', { 'class': 'th', 'title': source_title }, [ _('Source') ]),
 				E('th', { 'class': 'th', 'title': metric_title }, [ _('Metric') ]),
 				E('th', { 'class': 'th', 'title': table_title }, [ _('Table') ]),
--- a/feeds/luci/protocols/luci-proto-ppp/htdocs/luci-static/resources/protocol/pppoe.js
+++ b/feeds/luci/protocols/luci-proto-ppp/htdocs/luci-static/resources/protocol/pppoe.js
@@ -50,6 +50,9 @@ return network.registerProtocol('pppoe', {
 		o = s.taboption('general', form.Value, 'service', _('Service Name'), _('Leave empty to autodetect'));
 		o.placeholder = _('auto');
 
+		o = s.taboption('general', form.Value, 'ac_mac', _('AC MAC Address'), _('Only connect to specified MAC address'));
+		o.placeholder = _('auto');
+
 		if (L.hasSystemFeature('ipv6')) {
 			o = s.taboption('advanced', form.ListValue, 'ppp_ipv6', _('Obtain IPv6 address'), _('Enable IPv6 negotiation on the PPP link'));
 			o.ucioption = 'ipv6';
@@ -59,6 +62,12 @@ return network.registerProtocol('pppoe', {
 			o.default = 'auto';
 		}
 
+		o = s.taboption('advanced', form.Value, 'reqprefix', _('Request IPv6-prefix of length'));
+		o.depends("ppp_ipv6", "auto");
+
+		o = s.taboption('advanced', form.Flag, 'norelease', _('Do not send a Release when restarting'), _('Enable to minimise the chance of prefix change after a restart'));
+		o.depends("ppp_ipv6", "auto");
+
 		o = s.taboption('advanced', form.Value, '_keepalive_failure', _('LCP echo failure threshold'), _('Presume peer to be dead after given amount of LCP echo failures, use 0 to ignore failures'));
 		o.placeholder = '5';
 		o.datatype    = 'uinteger';
--- a/feeds/packages/net/aria2/files/aria2.conf
+++ b/feeds/packages/net/aria2/files/aria2.conf
@@ -1,12 +1,4 @@
 
-# You can use most aria2 command-line options, replace '-' with '_'.
-# eg. 'rpc-secret' ==> 'rpc_secret'
-#
-# We do not support all options at this time. But you can add any option
-# with 'list extra_settings'.
-#
-# You can also add new config sections to define multi instance.
-#
 config aria2 'main'
 	option enabled '0'
 	option user 'aria2'
@@ -18,14 +10,3 @@
 	option file_allocation 'none'
 	option save_session_interval '30'
 
-	# Add addition Headers here.
-	# eg. list header 'Content-Encoding: gzip'
-	list header ''
-
-	# Add BT trackers here.
-	# eg. list bt_tracker 'http://tracker.example.com/announce'
-	list bt_tracker ''
-
-	# Add extra settings here.
-	# eg. list extra_settings 'option=value'
-	list extra_settings ''
--- a/feeds/packages/net/ddns-scripts/files/usr/lib/ddns/update_cloudflare_com_v4.sh
+++ b/feeds/packages/net/ddns-scripts/files/usr/lib/ddns/update_cloudflare_com_v4.sh
@@ -27,9 +27,8 @@
 [ $use_https -eq 0 ] && use_https=1	# force HTTPS
 
 # used variables
-local __HOST __DOMAIN __TYPE __URLBASE __PRGBASE __RUNPROG __DATA __IPV6 __ZONEID __RECID __PROXIED
+local __HOST __DOMAIN __TYPE __URLBASE __PRGBASE __RUNPROG __DATA __IPV6 __ZONEID __RECID __PROXIED __TTL
 local __URLBASE="https://api.cloudflare.com/client/v4"
-local __TTL=120
 
 # split __HOST __DOMAIN from $domain
 # given data:
@@ -188,6 +187,7 @@
 # let's build data to send
 # set proxied parameter
 __PROXIED=$(grep -o '"proxied":\s*[^",]*' $DATFILE | grep -o '[^:]*$')
+__TTL=$(grep -o '"ttl":\s*[^",]*' $DATFILE | grep -o '[^:]*$')
 
 # use file to work around " needed for json
 cat > $DATFILE << EOF
--- a/feeds/packages/net/microsocks/Makefile
+++ b/feeds/packages/net/microsocks/Makefile
@@ -1,47 +1,37 @@
 include $(TOPDIR)/rules.mk
 
+PKG_LICENSE:=MIT
+PKG_LICENSE_FILES:=LICENSE
+
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/rofl0r/microsocks.git
+PKG_SOURCE_VERSION:=98421a21c4adc4c77c0cf3a5d650cc28ad3e0107
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
 PKG_NAME:=microsocks
-PKG_VERSION:=1.0.4
+PKG_VERSION=113.5.25
 PKG_RELEASE:=1
 
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/rofl0r/microsocks/tar.gz/v$(PKG_VERSION)?
-PKG_HASH:=130127a87f55870f18fbe47a64d9b9533020e2900802d36a0f6fd2b074313deb
-
-PKG_MAINTAINER:=Mateusz Korniak <matkorgithubcom@ant.gliwice.pl>
-PKG_LICENSE:=MIT
-PKG_LICENSE_FILES:=COPYING
-
-PKG_BUILD_FLAGS:=lto
+PKG_SOURCE_SUBDIR:=$(PKG_NAME)
+PKG_SOURCE:=$(PKG_NAME).$(PKG_VERSION).$(PKG_RELEASE).tar.gz
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_SOURCE_SUBDIR)
+PKG_BUILD_PARALLEL:=1
 
 include $(INCLUDE_DIR)/package.mk
 
 define Package/microsocks
-  SECTION:=net
-  SUBMENU:=Web Servers/Proxies
-  CATEGORY:=Network
-  TITLE:=SOCKS5 TCP/IP only proxy
+	SECTION:=net
+	CATEGORY:=Network
+	TITLE:=microsocks for OpenWRT
+	DEPENDS:=
 endef
 
 define Package/microsocks/description
-  Low resource SOCKS5 proxy.
-  Supports only SOCKS5 protocol and forwarding only TCP/IP connections.
+	microsocks is a Tiny Proxy in C.
 endef
 
-define Package/microsocks/conffiles
-/etc/config/microsocks
-endef
-
-TARGET_LDFLAGS+= -Wl,--gc-sections,--as-needed
-
 define Package/microsocks/install
 	$(INSTALL_DIR) $(1)/usr/bin
-	$(INSTALL_BIN) $(PKG_BUILD_DIR)/microsocks $(1)/usr/bin
-
-	$(INSTALL_DIR) $(1)/etc/config
-	$(INSTALL_CONF) ./files/microsocks.config $(1)/etc/config/microsocks
-	$(INSTALL_DIR) $(1)/etc/init.d
-	$(INSTALL_BIN) ./files/microsocks.init $(1)/etc/init.d/microsocks
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/microsocks $(1)/usr/bin/microsocks
 endef
 
 $(eval $(call BuildPackage,microsocks))
--- a/feeds/packages/net/miniupnpc/Makefile
+++ b/feeds/packages/net/miniupnpc/Makefile
@@ -8,13 +8,14 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=miniupnpc
-PKG_VERSION:=2.2.8
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/miniupnp/miniupnp.git
+PKG_SOURCE_DATE:=113.10.10
+PKG_SOURCE_VERSION:=0ff36e5397f36cd0bda626bc548192d10832d57f
+PKG_MIRROR_HASH:=skip
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)/$(PKG_NAME)-$(PKG_SOURCE_VERSION)/miniupnpc
 PKG_RELEASE:=1
 
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://miniupnp.tuxfamily.org/files
-PKG_HASH:=05b929679091b9921b6b6c1f25e39e4c8d1f4d46c8feb55a412aa697aee03a93
-
 PKG_MAINTAINER:=
 PKG_LICENSE:=BSD-3-Clause
 PKG_LICENSE_FILES:=LICENSE
@@ -23,6 +24,9 @@ PKG_CPE_ID:=cpe:/a:miniupnp_project:miniupnpc
 include $(INCLUDE_DIR)/package.mk
 include $(INCLUDE_DIR)/cmake.mk
 
+TAR_OPTIONS+= --strip-components 1
+TAR_CMD=$(HOST_TAR) -C $(1)/.. $(TAR_OPTIONS)
+
 define Package/miniupnpc/Default
   TITLE:=Lightweight UPnP
   URL:=https://miniupnp.tuxfamily.org
--- a/feeds/packages/net/miniupnpd/files/miniupnpd.init
+++ b/feeds/packages/net/miniupnpd/files/miniupnpd.init
@@ -63,6 +63,7 @@
 	local use_stun stun_host stun_port uuid notify_interval presentation_url
 	local upnp_lease_file clean_ruleset_threshold clean_ruleset_interval
 	local ipv6_disable
+	local force_forwarding
 
 	local enabled
 	config_get_bool enabled config enabled 1
@@ -90,6 +91,7 @@
 	config_get clean_ruleset_threshold config clean_ruleset_threshold
 	config_get clean_ruleset_interval config clean_ruleset_interval
 	config_get ipv6_disable config ipv6_disable 0
+	config_get force_forwarding config force_forwarding 0
 
 	local conf ifname ifname6
 
@@ -142,6 +144,7 @@
 		upnpd_write_bool igdv1 0 force_igd_desc_v1
 		upnpd_write_bool use_stun 0 ext_perform_stun
 		upnpd_write_bool ipv6_disable $ipv6_disable
+		upnpd_write_bool force_forwarding $force_forwarding
 
 		[ "$use_stun" -eq 0 ] || {
 			[ -n "$stun_host" ] && echo "ext_stun_host=$stun_host"
--- a/feeds/packages/net/miniupnpd/files/upnpd.config
+++ b/feeds/packages/net/miniupnpd/files/upnpd.config
@@ -1,28 +1,23 @@
-config upnpd config
-	option enabled		0
-	option enable_natpmp	1
-	option enable_upnp	1
-	option secure_mode	1
-	option log_output	0
-	option download		1024
-	option upload		512
-#by default, looked up dynamically from ubus
-#	option external_iface	wan
-	option internal_iface	lan
-	option port		5000
-	option upnp_lease_file	/var/run/miniupnpd.leases
-	option igdv1		1
+
+config upnpd 'config'
+	option enabled '0'
+	option download '1024'
+	option upload '512'
+	option internal_iface 'lan'
+	option port '5000'
+	option upnp_lease_file '/var/run/miniupnpd.leases'
 
 config perm_rule
-	option action		allow
-	option ext_ports	1024-65535
-	option int_addr		0.0.0.0/0	# Does not override secure_mode
-	option int_ports	1024-65535
-	option comment		"Allow high ports"
+	option comment 'Allow high ports'
+	option ext_ports '1024-65535'
+	option int_addr '0.0.0.0/0'
+	option int_ports '1024-65535'
+	option action 'allow'
 
 config perm_rule
-	option action		deny
-	option ext_ports	0-65535
-	option int_addr		0.0.0.0/0
-	option int_ports	0-65535
-	option comment		"Default deny"
+	option comment 'Default deny'
+	option ext_ports '0-65535'
+	option int_addr '0.0.0.0/0'
+	option int_ports '0-65535'
+	option action 'deny'
+
--- a/feeds/packages/net/miniupnpd/patches/200-remove-default-cflags.patch
+++ b/feeds/packages/net/miniupnpd/patches/200-remove-default-cflags.patch
@@ -1,18 +1,25 @@
 --- a/Makefile.linux
 +++ b/Makefile.linux
-@@ -25,16 +25,16 @@ CONFIG_OPTIONS ?= $(cat .configure.cache
- CONFIG_OPTIONS += --firewall=iptables
+@@ -28,21 +28,21 @@ endif
+ 
+ # Make sucks, prove me wrong
+ , := ,
+-ifeq ($(filter -D_FORTIFY_SOURCE=% -Wp$(,)-D_FORTIFY_SOURCE=%,$(CPPFLAGS) $(CFLAGS)),)
+-CPPFLAGS += -D_FORTIFY_SOURCE=2
+-endif
++#ifeq ($(filter -D_FORTIFY_SOURCE=% -Wp$(,)-D_FORTIFY_SOURCE=%,$(CPPFLAGS) $(CFLAGS)),)
++#CPPFLAGS += -D_FORTIFY_SOURCE=2
++#endif
+ CPPFLAGS += -D_GNU_SOURCE
+ 
  #CFLAGS = -O -g -DDEBUG
  CFLAGS ?= -Os
 -CFLAGS += -fno-strict-aliasing
 -CFLAGS += -fno-common
 -CFLAGS += -fstack-protector -fPIE
--CFLAGS += -D_FORTIFY_SOURCE=2
 +#CFLAGS += -fno-strict-aliasing
 +#CFLAGS += -fno-common
 +#CFLAGS += -fstack-protector -fPIE
-+#CFLAGS += -D_FORTIFY_SOURCE=2
- CPPFLAGS += -D_GNU_SOURCE
  CFLAGS += -Wall
  CFLAGS += -Wextra -Wstrict-prototypes -Wdeclaration-after-statement
  #CFLAGS += -Wno-missing-field-initializers
--- a/feeds/packages/net/miniupnpd/patches/300-macos-compat.patch
+++ /dev/null
@@ -1,22 +0,0 @@
---- a/Makefile.linux
-+++ b/Makefile.linux
-@@ -96,13 +96,13 @@ endif # ($(TEST),1)
- endif # ($(TARGET_OPENWRT,)
- 
- ifneq ($(shell ldd --version | grep GLIBC),)
--GLIBC_VERSION := $(shell ldd --version | head -n 1 | sed 's/^.* //')
--GLIBC_VERSION_MAJOR = $(shell echo $(GLIBC_VERSION) | cut -f 1 -d . )
--GLIBC_VERSION_MINOR = $(shell echo $(GLIBC_VERSION) | cut -f 2 -d . )
-+#GLIBC_VERSION := $(shell ldd --version | head -n 1 | sed 's/^.* //')
-+#GLIBC_VERSION_MAJOR = $(shell echo $(GLIBC_VERSION) | cut -f 1 -d . )
-+#GLIBC_VERSION_MINOR = $(shell echo $(GLIBC_VERSION) | cut -f 2 -d . )
- # clock_gettime() needs -lrt when glibc version < 2.17
--LDLIBS += $(shell if [ $(GLIBC_VERSION_MAJOR) -lt 2 ] \
--  || [ \( $(GLIBC_VERSION_MAJOR) -eq 2 \) -a \( $(GLIBC_VERSION_MINOR) -lt 17 \) ] ; \
--  then echo "-lrt" ; fi )
-+#LDLIBS += $(shell if [ $(GLIBC_VERSION_MAJOR) -lt 2 ] \
-+#  || [ \( $(GLIBC_VERSION_MAJOR) -eq 2 \) -a \( $(GLIBC_VERSION_MINOR) -lt 17 \) ] ; \
-+#  then echo "-lrt" ; fi )
- endif
- 
- TESTUPNPDESCGENOBJS = testupnpdescgen.o upnpdescgen.o
--- a/feeds/packages/net/miniupnpd/Makefile
+++ b/feeds/packages/net/miniupnpd/Makefile
@@ -8,12 +8,13 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=miniupnpd
-PKG_VERSION:=2.3.7
-PKG_RELEASE:=1
-
-PKG_SOURCE_URL:=https://miniupnp.tuxfamily.org/files
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_HASH:=fbdd5501039730f04a8420ea2f8f54b7df63f9f04cde2dc67fa7371e80477bbe
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/miniupnp/miniupnp.git
+PKG_SOURCE_DATE:=113.10.10
+PKG_SOURCE_VERSION:=0ff36e5397f36cd0bda626bc548192d10832d57f
+PKG_MIRROR_HASH:=skip
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(BUILD_VARIANT)/$(PKG_NAME)-$(PKG_SOURCE_VERSION)/miniupnpd
+PKG_RELEASE:=1
 
 PKG_MAINTAINER:=
 PKG_LICENSE:=BSD-3-Clause
@@ -26,6 +27,9 @@ PKG_BUILD_PARALLEL:=1
 include $(INCLUDE_DIR)/package.mk
 include $(INCLUDE_DIR)/version.mk
 
+TAR_OPTIONS+= --strip-components 1
+TAR_CMD=$(HOST_TAR) -C $(1)/.. $(TAR_OPTIONS)
+
 define Package/miniupnpd/Default
   SECTION:=net
   CATEGORY:=Network
--- a/feeds/packages/net/nft-qos/files/nft-qos.config
+++ b/feeds/packages/net/nft-qos/files/nft-qos.config
@@ -1,119 +1,6 @@
-#
-# Copyright (C) 2018 rosysong@rosinson.com
-#
-# This is the sample for nft-qos configuration file,
-# which will generate a nftables script in /tmp/qos.nft
-#
 
-# Getting Started
-# Official site      :
-#  https://netfilter.org/projects/nftables/index.html
-# What is nftables   :
-#  https://wiki.nftables.org/wiki-nftables/index.php/Main_Page
-#
-
-# Basic Operations
-# Configuring Tables :
-#  https://wiki.nftables.org/wiki-nftables/index.php/Configuring_tables
-# Configuring Chains :
-#  https://wiki.nftables.org/wiki-nftables/index.php/Configuring_chains
-# Configuring Rules  :
-#  https://wiki.nftables.org/wiki-nftables/index.php/Simple_rule_management
-# Quick Reference (recommended)   :
-#  https://wiki.nftables.org/wiki-nftables/index.php/Quick_reference-nftables_in_10_minutes
-#  https://netfilter.org/projects/nftables/manpage.html
-#
-
-config default default
-	# Enable Flag for limit rate
-	option limit_enable '1'
-
-	# Options for enable Static QoS (rate limit)
-	option limit_type 'static'
-	# Options for Static QoS (rate limit)
-	option static_unit_dl 'kbytes'
-	option static_unit_ul 'kbytes'
-	option static_rate_dl '50'
-	option static_rate_ul '50'
-
-	# Options for enable Dynamic QoS
-	# This option can not compatible with Static QoS
-	# option limit_type 'dynamic'
-
-	# For Dynamic QoS Samples (unit of bandwidth is Mbps):
-	option dynamic_cidr '192.168.1.0/24'
-	option dynamic_cidr6 'AAAA:BBBB::1/64'
-	option dynamic_bw_up '100'
-	option dynamic_bw_down '100'
-
-	# White list for static/dynamic limit
-	# list limit_whitelist '192.168.1.225'
-	# list limit_whitelist '192.168.1.0/24'
-	# list limit_whitelist 'ABCD:CDEF::1/64'
-
-	# Option for Mac address based traffic control
+config default 'default'
+	option limit_enable '0'
 	option limit_mac_enable '0'
-
-	# Options for Traffic Priority
 	option priority_enable '0'
-	option priority_netdev 'lan'
-
 
-#
-# For Static QoS Rate Limit Samples :
-#
-# For Download :
-#config download
-#	option hostname 'My PC'
-#	option unit 'kbytes'
-#	option ipaddr '192.168.1.224'
-#	option rate '128'
-#
-# For Upload :
-#config upload
-#	option hostname 'office-pc'
-#	option unit 'mbytes'
-#	option ipaddr 'ABCD:FFED::1/64'
-#	option rate '1024'
-#
-# For MAC address based traffic control Samples :
-#
-#config client
-#	option drunit 'kbytes'
-#	option urunit 'kbytes'
-#	option hostname 'tvbox'
-#	option macaddr '00:00:00:00:00:00'
-#	option drate '300'
-#	option urate '30'
-#
-# Traffic Priority Samples :
-#
-# protocol : tcp, udp, udplite, sctp, dccp, tcp is default
-# priority : integer between 1-11, 1 is default and the highest
-# service : you can input a integer or service name,
-#           e.g. '22', '11-22', 'telnet', 'ssh, http, ftp', etc
-#
-#config priority
-#	option protocol 'tcp'
-#	option priority '-400'
-#	option service '23'
-#	option comment '?'
-#
-#config priority
-#	option protocol 'udp'
-#	option priority '-400'
-#	option service 'https'
-#	option comment '?'
-#
-#config priority
-#	option protocol 'dccp'
-#	option priority '0'
-#	option service '22-35'
-#	option comment '?'
-#
-#config priority
-#	option protocol 'dccp'
-#	option priority '300'
-#	option service 'ftp,ssh,http'
-#	option comment '?'
-#
--- a/feeds/packages/net/openvpn/files/etc/hotplug.d/openvpn/01-user
+++ b/feeds/packages/net/openvpn/files/etc/hotplug.d/openvpn/01-user
@@ -1,9 +1,9 @@
 #!/bin/sh
 
-[ -e "/etc/openvpn.user" ] && {
+[ -e /etc/openvpn/openvpn.user ] && {
 	env -i ACTION="$ACTION" INSTANCE="$INSTANCE" \
 		/bin/sh \
-		/etc/openvpn.user \
+		/etc/openvpn/openvpn.user \
 		$*
 }
 
--- a/feeds/packages/net/openvpn/files/openvpn.init
+++ b/feeds/packages/net/openvpn/files/openvpn.init
@@ -10,12 +10,13 @@ STOP=10
 USE_PROCD=1
 PROG=/usr/sbin/openvpn
 
-PATH_INSTANCE_DIR="/etc/openvpn"
 LIST_SEP="
 "
 
 UCI_STARTED=
 UCI_DISABLED=
+CRON_FILE=/etc/crontabs/root
+LOG=/var/log/openvpn
 
 append_param() {
 	local s="$1"
@@ -43,9 +44,8 @@ append_params() {
 		config_get v "$s" "$p"
 		IFS="$LIST_SEP"
 		for v in $v; do
-			[ "$v" = "frames_only" ] && [ "$p" = "compress" ] && unset v && append_param "$s" "$p" && echo >> "/var/etc/openvpn-$s.conf"
-			[ -n "$v" ] && [ "$p" != "push" ] && append_param "$s" "$p" && echo " $v" >> "/var/etc/openvpn-$s.conf"
-			[ -n "$v" ] && [ "$p" = "push" ] && append_param "$s" "$p" && echo " \"$v\"" >> "/var/etc/openvpn-$s.conf"
+			[ -n "$v" ] && [ "$p" != push ] && append_param "$s" "$p" && echo " $v" >> "/var/etc/openvpn-$s.conf"
+			[ -n "$v" ] && [ "$p" = push ] && append_param "$s" "$p" && echo " \"$v\"" >> "/var/etc/openvpn-$s.conf"
 		done
 		unset IFS
 	done
@@ -71,14 +71,6 @@ section_enabled() {
 	[ $enable -gt 0 ] || [ $enabled -gt 0 ]
 }
 
-create_temp_file() {
-	mkdir -p "$(dirname "$1")"
-	rm -f "$1"
-	touch "$1"
-	chown root "$1"
-	chmod 0600 "$1"
-}
-
 openvpn_get_dev() {
 	local dev dev_type
 	local name="$1"
@@ -113,69 +105,21 @@ openvpn_get_dev() {
 	echo "--dev-type $dev_type --dev $dev"
 }
 
-openvpn_get_credentials() {
-	local name="$1"
-	local ret=""
-
-	config_get cert_password "$name" cert_password
-	config_get password "$name" password
-	config_get username "$name" username
-
-	if [ -n "$cert_password" ]; then
-		create_temp_file /var/run/openvpn.$name.pass
-		echo "$cert_password" > /var/run/openvpn.$name.pass
-		ret=" --askpass /var/run/openvpn.$name.pass "
-	fi
-
-	if [ -n "$username" ]; then
-		create_temp_file /var/run/openvpn.$name.userpass
-		echo "$username" > /var/run/openvpn.$name.userpass
-		echo "$password" >> /var/run/openvpn.$name.userpass
-		ret=" --auth-user-pass /var/run/openvpn.$name.userpass "
-	fi
-
-	# Return overrides
-	echo "$ret"
-}
-
 openvpn_add_instance() {
 	local name="$1"
 	local dir="$2"
-	local conf=$(basename "$3")
-	local security="$4"
-	local up="$5"
-	local down="$6"
-	local route_up="$7"
-	local route_pre_down="$8"
-	local ipchange="$9"
-	local client=$(grep -qEx "client|tls-client" "$dir/$conf" && echo 1)
+	local conf="$3"
 
 	procd_open_instance "$name"
 	procd_set_param command "$PROG"	\
-		--syslog "openvpn($name)" \
+		--log-append "$LOG" \
 		--status "/var/run/openvpn.$name.status" \
 		--cd "$dir" \
-		--config "$conf"
-	# external scripts can only be called on script-security 2 or higher
-	if [ "${security:-2}" -lt 2 ]; then
-		logger -t "openvpn(${name})" "not adding hotplug scripts due to script-security ${security:-2}"
-	else
-		procd_append_param command \
-			--up "/usr/libexec/openvpn-hotplug up $name" \
-			--down "/usr/libexec/openvpn-hotplug down $name" \
-			--route-up "/usr/libexec/openvpn-hotplug route-up $name" \
-			--route-pre-down "/usr/libexec/openvpn-hotplug route-pre-down $name" \
-			${client:+--ipchange "/usr/libexec/openvpn-hotplug ipchange $name"} \
-			${up:+--setenv user_up "$up"} \
-			${down:+--setenv user_down "$down"} \
-			${route_up:+--setenv user_route_up "$route_up"} \
-			${route_pre_down:+--setenv user_route_pre_down "$route_pre_down"} \
-			${client:+${ipchange:+--setenv user_ipchange "$ipchange"}}
-	fi
-	procd_append_param command \
-		--script-security "${security:-2}" \
-		$(openvpn_get_dev "$name" "$conf") \
-		$(openvpn_get_credentials "$name" "$conf")
+		--config "$conf" \
+		--up "/usr/libexec/openvpn-hotplug up $name" \
+		--down "/usr/libexec/openvpn-hotplug down $name" \
+		--script-security 2 \
+		$(openvpn_get_dev "$name" "$conf")
 	procd_set_param file "$dir/$conf"
 	procd_set_param term_timeout 15
 	procd_set_param respawn
@@ -185,7 +129,7 @@ openvpn_add_instance() {
 	procd_close_instance
 }
 
-start_uci_instance() {
+start_instance() {
 	local s="$1"
 
 	config_get config "$s" config
@@ -196,75 +140,23 @@ start_uci_instance() {
 		return 1
 	}
 
-	local up down route_up route_pre_down ipchange script_security
-	config_get up "$s" up
-	config_get down "$s" down
-	config_get route_up "$s" route_up
-	config_get route_pre_down "$s" route_pre_down
-	config_get ipchange "$s" ipchange
-	config_get script_security "$s" script_security
-
 	[ ! -d "/var/run" ] && mkdir -p "/var/run"
 
 	if [ ! -z "$config" ]; then
 		append UCI_STARTED "$config" "$LIST_SEP"
-		[ -n "$script_security" ] || get_openvpn_option "$config" script_security script-security
-		[ -n "$up" ] || get_openvpn_option "$config" up up
-		[ -n "$down" ] || get_openvpn_option "$config" down down
-		[ -n "$route_up" ] || get_openvpn_option "$config" route_up route-up
-		[ -n "$route_pre_down" ] || get_openvpn_option "$config" route_pre_down route-pre-down
-		[ -n "$ipchange" ] || get_openvpn_option "$config" ipchange ipchange
-		openvpn_add_instance "$s" "${config%/*}" "$config" "$script_security" "$up" "$down" "$route_up" "$route_pre_down" "$ipchange"
+		openvpn_add_instance "$s" "${config%/*}" "$config"
 		return
 	fi
 
-	create_temp_file "/var/etc/openvpn-$s.conf"
+	[ ! -d "/var/etc" ] && mkdir -p "/var/etc"
+	[ -f "/var/etc/openvpn-$s.conf" ] && rm "/var/etc/openvpn-$s.conf"
 
 	append_bools "$s" $OPENVPN_BOOLS
 	append_params "$s" $OPENVPN_PARAMS
 	append_list "$s" $OPENVPN_LIST
+	sed -i "s/server.crt/server.crt\ncipher $(uci get openvpn.myvpn.data_ciphers)/" /var/etc/openvpn-$s.conf
 
-	openvpn_add_instance "$s" "/var/etc" "openvpn-$s.conf" "$script_security" "$up" "$down" "$route_up" "$route_pre_down" "$ipchange"
-}
-
-start_path_instances() {
-	local path name
-
-	for path in ${PATH_INSTANCE_DIR}/*.conf; do
-		[ -f "$path" ] && {
-			name="${path##*/}"
-			name="${name%.conf}"
-			start_path_instance "$name"
-		}
-	done
-}
-
-start_path_instance() {
-	local name="$1"
-
-	local path name up down route_up route_pre_down ipchange
-
-	path="${PATH_INSTANCE_DIR}/${name}.conf"
-
-	# don't start configs again that are already started by uci
-	if echo "$UCI_STARTED" | grep -qxF "$path"; then
-		logger -t openvpn "$name.conf already started"
-		return
-	fi
-
-	# don't start configs which are set to disabled in uci
-	if echo "$UCI_DISABLED" | grep -qxF "$path"; then
-		logger -t openvpn "$name.conf is disabled in /etc/config/openvpn"
-		return
-	fi
-
-	get_openvpn_option "$path" up up || up=""
-	get_openvpn_option "$path" down down || down=""
-	get_openvpn_option "$path" route_up route-up || route_up=""
-	get_openvpn_option "$path" route_pre_down route-pre-down || route_pre_down=""
-	get_openvpn_option "$path" ipchange ipchange || ipchange=""
-
-	openvpn_add_instance "$name" "${path%/*}" "$path" "" "$up" "$down" "$route_up" "$route_pre_down" "$ipchange"
+	openvpn_add_instance "$s" "/var/etc" "openvpn-$s.conf"
 }
 
 start_service() {
@@ -281,28 +173,43 @@ start_service() {
 		fi
 	}
 
-	. /lib/functions/openvpn.sh
 	. /usr/share/openvpn/openvpn.options
 	config_load 'openvpn'
 
 	if [ -n "$instance" ]; then
-		if [ "$instance_found" -gt 0 ]; then
-			start_uci_instance "$instance"
-		elif [ -f "${PATH_INSTANCE_DIR}/${instance}.conf" ]; then
-			start_path_instance "$instance"
-		fi
+		[ "$instance_found" -gt 0 ] || return
+		start_instance "$instance"
 	else
-		config_foreach start_uci_instance 'openvpn'
+		config_foreach start_instance 'openvpn'
 
-		auto="$(uci_get openvpn globals autostart 1)"
-		if [ "$auto" = "1" ]; then
-			start_path_instances
-		else
-			logger -t openvpn "Autostart for configs in '$PATH_INSTANCE_DIR/*.conf' disabled"
-		fi
+		local path name
+		for path in /etc/openvpn/*.conf; do
+			if [ -f "$path" ]; then
+				name="${path##*/}"; name="${name%.conf}"
+
+				# don't start configs again that are already started by uci
+				if echo "$UCI_STARTED" | grep -qxF "$path"; then
+					continue
+
+				# don't start configs which are set to disabled in uci
+				elif echo "$UCI_DISABLED" | grep -qxF "$path"; then
+					logger -t openvpn "$name.conf is disabled in /etc/config/openvpn"
+					continue
+				fi
+
+				openvpn_add_instance "$name" "${path%/*}" "$path"
+			fi
+		done
+	fi
+	if ! grep -q $LOG $CRON_FILE;then
+		echo "0 1 * * * : > $LOG" >> $CRON_FILE;/etc/init.d/cron restart
 	fi
 }
 
+reload_service() {
+	restart
+}
+
 service_triggers() {
 	procd_add_reload_trigger openvpn
 }
--- a/feeds/packages/net/openvpn/files/openvpn.options
+++ b/feeds/packages/net/openvpn/files/openvpn.options
@@ -23,6 +23,7 @@
 connect_retry_max
 connect_timeout
 crl_verify
+data_ciphers
 data_ciphers_fallback
 dev
 dev_node
@@ -198,7 +199,6 @@
 '
 
 OPENVPN_LIST='
-data_ciphers
 ncp_ciphers
 tls_cipher
 tls_ciphersuites
--- a/feeds/packages/net/openvpn/Makefile
+++ b/feeds/packages/net/openvpn/Makefile
@@ -90,20 +90,13 @@ define Build/Configure
 	)
 endef
 
-define Package/openvpn-$(BUILD_VARIANT)/conffiles
-/etc/config/openvpn
-/etc/openvpn.user
-endef
-
 define Package/openvpn-$(BUILD_VARIANT)/install
 	$(INSTALL_DIR) \
 		$(1)/usr/sbin \
 		$(1)/usr/share/openvpn \
 		$(1)/etc/init.d \
-		$(1)/etc/config \
 		$(1)/etc/openvpn \
 		$(1)/lib/functions \
-		$(1)/lib/upgrade/keep.d \
 		$(1)/usr/libexec \
 		$(1)/etc/hotplug.d/openvpn
 
@@ -129,18 +122,11 @@ define Package/openvpn-$(BUILD_VARIANT)/install
 
 	$(INSTALL_DATA) \
 		files/etc/openvpn.user \
-		$(1)/etc/openvpn.user
+		$(1)/etc/openvpn/openvpn.user
 
 	$(INSTALL_DATA) \
 		files/openvpn.options \
 		$(1)/usr/share/openvpn/openvpn.options
-
-	$(INSTALL_CONF) files/openvpn.config \
-		$(1)/etc/config/openvpn
-
-	$(INSTALL_DATA) \
-		files/openvpn.upgrade \
-		$(1)/lib/upgrade/keep.d/openvpn
 endef
 
 $(eval $(call BuildPackage,openvpn-openssl))
--- a/feeds/packages/net/smartdns/Makefile
+++ b/feeds/packages/net/smartdns/Makefile
@@ -6,13 +6,12 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=smartdns
-PKG_VERSION:=1.2023.43
+PKG_VERSION:=1.2099.99
 PKG_RELEASE:=1
 
 PKG_SOURCE_PROTO:=git
 PKG_SOURCE_URL:=https://www.github.com/pymumu/smartdns.git
-PKG_SOURCE_VERSION:=1ba6ee7cb98b5b6448bc2a2be318eb3518d4de79
-PKG_MIRROR_HASH:=522078cc35611b0ddddb93381507885222d2396ff4f1429ed6e93a82000b2d46
+PKG_SOURCE_VERSION:=fdc1a41967477698c1e320fb55592df3c6213045
 
 PKG_MAINTAINER:=Nick Peng <pymumu@gmail.com>
 PKG_LICENSE:=GPL-3.0-or-later
@@ -40,24 +39,9 @@
 Unlike dnsmasq's all-servers, smartdns returns the fastest IP, and encrypt DNS queries with DoT or DoH. 
 endef
 
-define Package/smartdns/conffiles
-/etc/config/smartdns
-/etc/smartdns/address.conf
-/etc/smartdns/blacklist-ip.conf
-/etc/smartdns/custom.conf
-/etc/smartdns/domain-block.list
-/etc/smartdns/domain-forwarding.list
-endef
-
 define Package/smartdns/install
-	$(INSTALL_DIR) $(1)/usr/sbin $(1)/etc/config $(1)/etc/init.d 
-	$(INSTALL_DIR) $(1)/etc/smartdns $(1)/etc/smartdns/domain-set $(1)/etc/smartdns/conf.d/
-	$(INSTALL_BIN) $(PKG_BUILD_DIR)/src/smartdns $(1)/usr/sbin/smartdns
-	$(INSTALL_BIN) $(PKG_BUILD_DIR)/package/openwrt/files/etc/init.d/smartdns $(1)/etc/init.d/smartdns
-	$(INSTALL_CONF) $(PKG_BUILD_DIR)/package/openwrt/address.conf $(1)/etc/smartdns/address.conf
-	$(INSTALL_CONF) $(PKG_BUILD_DIR)/package/openwrt/blacklist-ip.conf $(1)/etc/smartdns/blacklist-ip.conf
-	$(INSTALL_CONF) $(PKG_BUILD_DIR)/package/openwrt/custom.conf $(1)/etc/smartdns/custom.conf
-	$(INSTALL_CONF) $(PKG_BUILD_DIR)/package/openwrt/files/etc/config/smartdns $(1)/etc/config/smartdns
+	$(INSTALL_DIR) $(1)/usr/bin
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/src/smartdns $(1)/usr/bin/smartdns
 endef
 
 $(eval $(call BuildPackage,smartdns))
--- a/feeds/luci/applications/luci-app-frpc/htdocs/luci-static/resources/view/frpc.js
+++ b/feeds/luci/applications/luci-app-frpc/htdocs/luci-static/resources/view/frpc.js
@@ -13,10 +13,11 @@
 	[widgets.GroupSelect, 'group', _('Run daemon as group')],
 	[form.Flag, 'respawn', _('Respawn when crashed')],
 	[form.DynamicList, 'env', _('Environment variable'), _('OS environments pass to frp for config file template, see <a href="https://github.com/fatedier/frp#configuration-file-template">frp README</a>'), {placeholder: 'ENV_NAME=value'}],
-	[form.DynamicList, 'conf_inc', _('Additional configs'), _('Config files include in temporary config file'), {placeholder: '/etc/frp/frpc.d/frpc_full.ini'}]
+	[form.DynamicList, 'conf_inc', _('Additional configs'), _('Config files include in temporary config file')]
 ];
 
 var commonConf = [
+	[form.Flag, 'enabled', _('Enable'), {datatype: 'bool'}],
 	[form.Value, 'server_addr', _('Server address'), _('ServerAddr specifies the address of the server to connect to.<br />By default, this value is "127.0.0.1".'), {datatype: 'host'}],
 	[form.Value, 'server_port', _('Server port'), _('ServerPort specifies the port to connect to the server on.<br />By default, this value is 7000.'), {datatype: 'port'}],
 	[form.Value, 'http_proxy', _('HTTP proxy'), _('HttpProxy specifies a proxy address to connect to the server through. If this value is "", the server will be connected to directly.<br />By default, this value is read from the "http_proxy" environment variable.')],
@@ -32,7 +33,7 @@
 	[form.Value, 'assets_dir', _('Assets dir'), _('AssetsDir specifies the local directory that the admin server will load resources from. If this value is "", assets will be loaded from the bundled executable using statik.<br />By default, this value is "".')],
 	[form.Flag, 'tcp_mux', _('TCP mux'), _('TcpMux toggles TCP stream multiplexing. This allows multiple requests from a client to share a single TCP connection. If this value is true, the server must have TCP multiplexing enabled as well.<br />By default, this value is true.'), {datatype: 'bool', default: 'true'}],
 	[form.Value, 'user', _('User'), _('User specifies a prefix for proxy names to distinguish them from other clients. If this value is not "", proxy names will automatically be changed to "{user}.{proxy_name}".<br />By default, this value is "".')],
-	[form.Flag, 'login_fail_exit', _('Exit when login fail'), _('LoginFailExit controls whether or not the client should exit after a failed login attempt. If false, the client will retry until a login attempt succeeds.<br />By default, this value is true.'), {datatype: 'bool', default: 'true'}],
+	[form.Flag, 'login_fail_exit', _('Exit when login fail'), _('LoginFailExit controls whether or not the client should exit after a failed login attempt. If false, the client will retry until a login attempt succeeds.<br />By default, this value is false.'), {datatype: 'bool'}],
 	[form.ListValue, 'protocol', _('Protocol'), _('Protocol specifies the protocol to use when interacting with the server. Valid values are "tcp", "kcp", and "websocket".<br />By default, this value is "tcp".'), {values: ['tcp', 'kcp', 'websocket']}],
 	[form.Flag, 'tls_enable', _('TLS'), _('TLSEnable specifies whether or not TLS should be used when communicating with the server.'), {datatype: 'bool'}],
 	[form.Value, 'heartbeat_interval', _('Heartbeat interval'), _('HeartBeatInterval specifies at what interval heartbeats are sent to the server, in seconds. It is not recommended to change this value.<br />By default, this value is 30.'), {datatype: 'uinteger'}],
--- a/feeds/luci/applications/luci-app-frpc/po/zh_Hant/frpc.po
+++ b/feeds/luci/applications/luci-app-frpc/po/zh_Hant/frpc.po
@@ -264,10 +264,10 @@ msgstr ""
 msgid ""
 "LoginFailExit controls whether or not the client should exit after a failed "
 "login attempt. If false, the client will retry until a login attempt "
-"succeeds.<br />By default, this value is true."
+"succeeds.<br />By default, this value is false."
 msgstr ""
 "LoginFailExit控制在嘗試登錄失敗後客戶端是否應退出。如果為false，則客戶端將重"
-"試，直到成功登錄為止。<br />預設情況下，此值為true。"
+"試，直到成功登錄為止。<br />預設情況下，此值為false。"
 
 #: applications/luci-app-frpc/htdocs/luci-static/resources/view/frpc.js:165
 msgid "NOT RUNNING"
--- a/feeds/luci/applications/luci-app-xfrpc/htdocs/luci-static/resources/view/xfrpc.js
+++ b/feeds/luci/applications/luci-app-xfrpc/htdocs/luci-static/resources/view/xfrpc.js
@@ -87,9 +87,8 @@ return view.extend({
 		s.anonymous = true;
 		s.dynamic = true;
 
-		o = s.option(form.Flag, 'disabled', _('Disabled xfrpc service'));
-		o.datatype = 'bool';
-		o.optional = true;
+		o = s.option(form.Flag, 'enabled', _('Enabled'));
+		o.rmempty = false;
 
 		o = s.option(form.ListValue, 'loglevel', _('Log level'), 
 			'%s <br /> %s'.format(_('LogLevel specifies the minimum log level. Valid values are "Debug", "Info", \
--- a/feeds/luci/applications/luci-app-xfrpc/po/zh_Hant/xfrpc.po
+++ b/feeds/luci/applications/luci-app-xfrpc/po/zh_Hant/xfrpc.po
@@ -57,8 +57,8 @@ msgid "Debug"
 msgstr "除錯"
 
 #: applications/luci-app-xfrpc/htdocs/luci-static/resources/view/xfrpc.js:90
-msgid "Disabled xfrpc service"
-msgstr "禁用xfrpc服務"
+msgid "Enabled"
+msgstr "啟用"
 
 #: applications/luci-app-xfrpc/htdocs/luci-static/resources/view/xfrpc.js:105
 msgid "Emergency"
@@ -153,10 +153,6 @@ msgstr "執行中"
 msgid "Remote port"
 msgstr "遠端埠號"
 
-#: applications/luci-app-xfrpc/root/usr/share/luci/menu.d/luci-app-xfrpc.json:3
-msgid "Reverse proxy"
-msgstr "反向代理"
-
 #: applications/luci-app-xfrpc/htdocs/luci-static/resources/view/xfrpc.js:69
 msgid "Server address"
 msgstr "伺服器位址"
--- a/feeds/luci/applications/luci-app-xfrpc/root/usr/share/luci/menu.d/luci-app-xfrpc.json
+++ b/feeds/luci/applications/luci-app-xfrpc/root/usr/share/luci/menu.d/luci-app-xfrpc.json
@@ -1,6 +1,6 @@
 {
 	"admin/services/xfrpc": {
-		"title": "Reverse proxy",
+		"title": "xfrpc",
 		"action": {
 			"type": "view",
 			"path": "xfrpc"
--- a/feeds/packages/net/frp/files/frpc.config
+++ b/feeds/packages/net/frp/files/frpc.config
@@ -1,23 +1,13 @@
+
 config init
-	option stdout 1
-	option stderr 1
-	option user frpc
-	option group frpc
-	option respawn 1
-#	OS environments pass to frp for config file template, see
-#	https://github.com/fatedier/frp#configuration-file-template
-#	list env 'ENV_NAME=value'
-#	Config files include in temporary config file.
-#	list conf_inc '/etc/frp/frpc.d/frpc_full.ini'
+	option stdout '1'
+	option stderr '1'
+	option respawn '1'
+	option user 'root'
+	option group 'root'
 
 config conf 'common'
-	option server_addr 127.0.0.1
-	option server_port 7000
-#	List options with name="_" will be directly appended to config file
-#	list _ '# Key-A=Value-A'
+	option server_addr '127.0.0.1'
+	option server_port '7000'
+	option tls_enable 'false'
 
-config conf 'ssh'
-	option type tcp
-	option local_ip 127.0.0.1
-	option local_port 22
-	option remote_port 6000
--- a/feeds/packages/net/frp/files/frpc.init
+++ b/feeds/packages/net/frp/files/frpc.init
@@ -13,7 +13,6 @@ _err() {
 
 config_cb() {
 	[ $# -eq 0 ] && return
-
 	local type="$1"
 	local name="$2"
 	if [ "$type" = "conf" ]; then
@@ -21,6 +20,7 @@ config_cb() {
 		option_cb() {
 			local option="$1"
 			local value="$2"
+			[ "$1" = enabled ] && return 0
 			[ "$option" = "name" ] && \
 			sed -i "s/$CONFIG_SECTION/$value/g" "$conf_file" || \
 			echo "$option = $value" >> "$conf_file";
@@ -43,6 +43,7 @@ service_triggers()
 }
 
 start_service() {
+	[ "$(uci -q get frpc.common.enabled)" = 1 ] || return 0
 	local init_cfg=" "
 	local conf_file="/var/etc/$NAME.ini"
 
@@ -69,7 +70,6 @@ start_service() {
 
 	procd_open_instance
 	procd_set_param command "$PROG" -c "$conf_file"
-	procd_set_param file $conf_file
 	procd_set_param stdout $stdout
 	procd_set_param stderr $stderr
 	[ -n "$user" ] && procd_set_param user "$user"
@@ -78,3 +78,11 @@ start_service() {
 	[ -n "$env" ] && config_list_foreach "$init_cfg" env "procd_append_param env"
 	procd_close_instance
 }
+
+stop_service(){
+	rm -f /var/etc/$NAME.ini
+}
+
+reload_service() {
+	restart
+}
--- a/feeds/packages/net/frp/Makefile
+++ b/feeds/packages/net/frp/Makefile
@@ -1,12 +1,16 @@
 include $(TOPDIR)/rules.mk
 
+PKG_SOURCE_URL:=https://github.com/fatedier/frp.git
+PKG_SOURCE_VERSION:=8593eff752117aaa3775db498eb0e553a251c4f6
+
 PKG_NAME:=frp
-PKG_VERSION:=0.51.3
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
+PKG_VERSION:=0.61.0.113.11.20
 PKG_RELEASE:=1
 
+PKG_SOURCE_SUBDIR:=$(PKG_NAME)-$(PKG_VERSION)
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/fatedier/frp/tar.gz/v${PKG_VERSION}?
-PKG_HASH:=83032399773901348c660d41c967530e794ab58172ccd070db89d5e50d915fef
+PKG_SOURCE_PROTO:=git
 
 PKG_MAINTAINER:=Richard Yu <yurichard3839@gmail.com>
 PKG_LICENSE:=Apache-2.0
@@ -25,8 +29,6 @@ include ../../lang/golang/golang-package.mk
 define Package/frp/install
 	$(INSTALL_DIR) $(1)/usr/bin/
 	$(INSTALL_BIN) $(GO_PKG_BUILD_BIN_DIR)/$(2) $(1)/usr/bin/
-	$(INSTALL_DIR) $(1)/etc/frp/$(2).d/
-	$(INSTALL_DATA) $(PKG_BUILD_DIR)/conf/$(2)_full.ini $(1)/etc/frp/$(2).d/
 	$(INSTALL_DIR) $(1)/etc/config/
 	$(INSTALL_CONF) ./files/$(2).config $(1)/etc/config/$(2)
 	$(INSTALL_DIR) $(1)/etc/init.d/
--- a/feeds/packages/net/kcptun/Makefile
+++ b/feeds/packages/net/kcptun/Makefile
@@ -1,12 +1,16 @@
 include $(TOPDIR)/rules.mk
 
+PKG_SOURCE_URL:=https://github.com/xtaci/kcptun.git
+PKG_SOURCE_VERSION:=df42df9d20a2a292ad3e36d1beca2890dd393a7f
+
 PKG_NAME:=kcptun
-PKG_VERSION:=20230207
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
+PKG_VERSION:=20241119
 PKG_RELEASE:=1
 
+PKG_SOURCE_SUBDIR:=$(PKG_NAME)-$(PKG_VERSION)
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/xtaci/kcptun/tar.gz/v${PKG_VERSION}?
-PKG_HASH:=09054b52d5799a8e47edb36f2db335d929d5bbb63a26f7ba2fe03c64ec39d550
+PKG_SOURCE_PROTO:=git
 
 PKG_MAINTAINER:=Dengfeng Liu <liudf0716@gmail.com>, Chao Liu <expiron18@gmail.com>
 PKG_LICENSE:=MIT
@@ -23,26 +27,6 @@ GO_PKG_LDFLAGS_X:=main.VERSION=$(PKG_VERSION)
 include $(INCLUDE_DIR)/package.mk
 include ../../lang/golang/golang-package.mk
 
-define Package/kcptun-config
-  SECTION:=net
-  CATEGORY:=Network
-  SUBMENU:=Web Servers/Proxies
-  TITLE:=Kcptun Config Scripts
-  URL:=https://github.com/xtaci/kcptun
-  DEPENDS:=$(GO_ARCH_DEPENDS)
-endef
-
-define Package/kcptun-config/conffiles
-/etc/config/kcptun
-endef
-
-define Package/kcptun-config/install
-	$(INSTALL_DIR) $(1)/etc/config
-	$(INSTALL_CONF) ./files/kcptun.config $(1)/etc/config/kcptun
-	$(INSTALL_DIR) $(1)/etc/init.d
-	$(INSTALL_BIN) ./files/kcptun.init $(1)/etc/init.d/kcptun
-endef
-
 define Package/kcptun/Default
   define Package/kcptun-$(1)
     SECTION:=net
@@ -50,7 +34,6 @@ define Package/kcptun/Default
     SUBMENU:=Web Servers/Proxies
     TITLE:=KCP-based Secure Tunnel $(1)
     URL:=https://github.com/xtaci/kcptun
-    DEPENDS:=+kcptun-config
   endef
 
   define Package/kcptun-$(1)/description
@@ -66,7 +49,6 @@ This package only contains kcptun $(1).
   endef
 endef
 
-$(eval $(call BuildPackage,kcptun-config))
 KCPTUN_COMPONENTS:=server client
 $(foreach component,$(KCPTUN_COMPONENTS), \
   $(eval $(call Package/kcptun/Default,$(component))) \
--- a/feeds/packages/net/sqm-scripts/Makefile
+++ b/feeds/packages/net/sqm-scripts/Makefile
@@ -8,13 +8,14 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=sqm-scripts
-PKG_SOURCE_VERSION:=33a89d8e7f6c82acc0adced84cf5cd95447e6bb5
-PKG_VERSION:=1.6.0
+PKG_SOURCE_VERSION:=95337de67a35b474d493966223f324eb1302adfc
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
+PKG_VERSION:=1.6.0.113.6.3
 PKG_RELEASE:=1
 
 PKG_SOURCE_PROTO:=git
 PKG_SOURCE_URL:=https://github.com/tohojo/sqm-scripts
-PKG_MIRROR_HASH:=abe04270207177fb3ba4df103ffce3db4037d52d601ce1ce4e75206ad4b21377
+PKG_MIRROR_HASH:=skip
 
 PKG_MAINTAINER:=Toke Høiland-Jørgensen <toke@toke.dk>
 PKG_LICENSE:=GPL-2.0-only
--- a/feeds/packages/net/xfrpc/Makefile
+++ b/feeds/packages/net/xfrpc/Makefile
@@ -11,10 +11,10 @@ PKG_NAME:=xfrpc
 PKG_VERSION:=3.05.661
 PKG_RELEASE:=1
 
-PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/liudf0716/xfrpc/tar.gz/$(PKG_VERSION)?
-PKG_HASH:=202b5eb6d4ecee5444ac5a55fea462ad106ebfb88f51ca8499553db4f701f28f
-PKG_BUILD_DIR:=$(BUILD_DIR)/xfrpc-$(PKG_VERSION)
+PKG_SOURCE_PROTO:=git
+PKG_SOURCE_URL:=https://github.com/liudf0716/xfrpc.git
+PKG_SOURCE_VERSION:=$(PKG_VERSION)
+PKG_MIRROR_HASH:=2f955520efc8c6078e68646dcf6dff127a3a7724
 
 PKG_MAINTAINER:=Dengfeng Liu <liudf0716@gmail.com>
 PKG_LICENSE:=GPL-3.0-or-later
--- a/feeds/packages/net/xfrpc/files/xfrpc.conf
+++ b/feeds/packages/net/xfrpc/files/xfrpc.conf
@@ -1,29 +1,9 @@
-config xfrpc 'common'
-	option enabled 0
-	option loglevel 7
-	option server_addr frps.wifidogx.online
-	option server_port 7000
 
-config tcp 'ssh01'
-	option local_ip 127.0.0.1
-	option local_port 22
-	option remote_port 6000
-	
-#config http 'web01'
-#	option local_ip 127.0.0.1
-#	option local_port 8080
-#	option custom_domains your_domain_name
-	
-#config https 'web02'
-#	option local_ip 127.0.0.1
-#	option local_port 8443
-#	option subdomain your_domain_name
+config xfrp 'init'
+	option enabled '0'
+	option loglevel '4'
 
-#config socks5 'socks01'
-#   option remote_port 6001
+config xfrpc 'common'
+	option server_addr '0.0.0.0'
+	option server_port '7000'
 
-#config plugin 'plugin01'
-#	option remote_port 6002
-#	option plugin_name http
-#	option plugin_param 'youtube-url'
-#  	option plugin_action 'download'
--- a/feeds/packages/net/xfrpc/files/xfrpc.init
+++ b/feeds/packages/net/xfrpc/files/xfrpc.init
@@ -1,5 +1,5 @@
 #!/bin/sh /etc/rc.common
-# Copyright (C) 2022 Dengfeng Liu <liudf0716@gmail.com>
+# Copyright (C) 2022 Dengfeng Liu <liu_df@qq.com>
 #
 # This is free software, licensed under the GNU General Public License v3.
 # See /LICENSE for more information.
@@ -13,107 +13,46 @@ PROG=/usr/bin/$NAME
 
 
 handle_xfrpc() {
-    local section="$1"
-    local config="$2"
-
-    case "$section" in
-        common)
-            uci_validate_section xfrpc xfrpc common \
-                'server_addr:host' \
-                'server_port:uinteger' \
-                'token:string:'
-            ;;
-    esac
-
-    # Write the validated settings to the config file
-    echo "[${section}]" >> "$config"
-    [ -z "$server_addr" ] || echo "server_addr = $server_addr" >> "$config"
-    [ -z "$server_port" ] || echo "server_port = $server_port" >> "$config"
-    [ -z "$token" ] || echo "token = $token" >> "$config"
-}
-
-handle_tcp() {
-	local section="$1"
+	local name="$1"
 	local config="$2"
 
-	uci_validate_section xfrpc tcp $section \
-		'enabled:bool:1' \
-		'local_ip:host' \
-		'local_port:uinteger' \
-		'remote_port:uinteger' 
-	
-	# if enabled is 0, then return
-	[ $enabled = 0 ] && return
-
-	# Write the validated settings to the config file
-	echo "[${section}]" >> "$config"
-	echo "type = tcp" >> "$config"
-	[ -z "$local_ip" ] || echo "local_ip = $local_ip" >> "$config"
-	[ -z "$local_port" ] || echo "local_port = $local_port" >> "$config"
-	[ -z "$remote_port" ] || echo "remote_port = $remote_port" >> "$config"
-}
-
-handle_http() {
-	local section="$1"
-	local config="$2"
-
-	uci_validate_section xfrpc http $section \
-		'enabled:bool:1' \
-		'local_ip:host' \
-		'local_port:uinteger' \
-		'custom_domains:string' \
-		'subdomain:string' \
-
-	# if enabled is 0, then return
-	[ $enabled = 0 ] && return
-
-	# Write the validated settings to the config file
-	echo "[${section}]" >> "$config"
-	echo "type = http" >> "$config"
-	[ -z "$local_ip" ] || echo "local_ip = $local_ip" >> "$config"
-	[ -z "$local_port" ] || echo "local_port = $local_port" >> "$config"
-	[ -z "$custom_domains" ] || echo "custom_domains = $custom_domains" >> "$config"
-	[ -z "$subdomain" ] || echo "subdomain = $subdomain" >> "$config"
-}
-
-handle_https() {
-	local section="$1"
-	local config="$2"
-
-	uci_validate_section xfrpc https $section \
-		'enabled:bool:1' \
-		'local_ip:host' \
-		'local_port:uinteger' \
-		'custom_domains:string' \
-		'subdomain:string' 
-	
-	# if enabled is 0, then return
-	[ $enabled = 0 ] && return
-
-	# Write the validated settings to the config file
-	echo "[${section}]" >> "$config"
-	echo "type = https" >> "$config"
-	[ -z "$local_ip" ] || echo "local_ip = $local_ip" >> "$config"
-	[ -z "$local_port" ] || echo "local_port = $local_port" >> "$config"
-	[ -z "$custom_domains" ] || echo "custom_domains = $custom_domains" >> "$config"
-	[ -z "$subdomain" ] || echo "subdomain = $subdomain" >> "$config"
-}
-
-handle_socks5() {
-	local section="$1"
-	local config="$2"
-
-	uci_validate_section xfrpc socks5 $section \
-		'enabled:bool:1' \
-		'remote_port:uinteger' 
-
-	# if enabled is 0, then return
-	[ $enabled = 0 ] && return
-
-	# Write the validated settings to the config file
-	echo "[${section}]" >> "$config"
-	echo "type = socks5" >> "$config"
-	[ -z "$remote_port" ] || echo "remote_port = $remote_port" >> "$config"
+	echo "[$name]" >> "$config"
+
+	handle_type() {
+		uci_validate_section xfrpc xfrpc "$name" \
+				'type:or("tcp", "http", "https")' \
+				'local_ip:ipaddr:127.0.0.1' \
+				'local_port:uinteger'
+
+		echo "type = $type" >> "$config"
+		echo "local_ip = $local_ip" >> "$config"
+		echo "local_port = $local_port" >> "$config"
+		case "$type" in
+		tcp|mstsc|socks5)
+			config_get remote_port "$name" remote_port
+			echo "remote_port = $remote_port" >> "$config"
+			;;
+		http|https)
+			config_get custom_domains "$name" custom_domains
+			[ -z "$custom_domains" ] || echo "custom_domains = $custom_domains" >> "$config"
+			config_get subdomain "$name" subdomain
+			[ -z "$subdomain" ] || echo "subdomain = $subdomain" >> "$config"
+			;;
+		esac
+	}
+
+	if [ "$name" = "common" ]; then
+		uci_validate_section xfrpc xfrp "$name" \
+				'server_addr:host' \
+				'server_port:uinteger' \
+				'token:string:'	
+
+		echo "server_addr = $server_addr" >> "$config"
+		echo "server_port = $server_port" >> "$config"
+		[ -z "$token" ] || echo "token = $token" >> "$config"
+	else
+		handle_type
+	fi
 }
 
 service_triggers() {
@@ -126,7 +65,7 @@ start_service() {
 	> "$conf_file"
 	config_load "$NAME"
 
-	uci_validate_section xfrpc xfrpc common \
+	uci_validate_section xfrpc xfrp init \
 			'enabled:bool:0' \
 			'loglevel:uinteger:0'
 
@@ -136,10 +75,6 @@ start_service() {
 	fi
 
 	config_foreach handle_xfrpc xfrpc "$conf_file"
-	config_foreach handle_tcp tcp "$conf_file"
-	config_foreach handle_http http "$conf_file"
-	config_foreach handle_https https "$conf_file"
-	config_foreach handle_socks5 socks5 "$conf_file"
 
 	procd_open_instance
 	procd_set_param command "$PROG" -c "$conf_file" -f -d $loglevel
--- a/feeds/packages/net/xray-core/Makefile
+++ b/feeds/packages/net/xray-core/Makefile
@@ -1,18 +1,23 @@
 include $(TOPDIR)/rules.mk
+PKG_SOURCE_URL:=https://github.com/XTLS/Xray-core.git
+PKG_SOURCE_VERSION:=513f18bf531ef5f92464c2affefed0db4f28280b
 
 PKG_NAME:=xray-core
-PKG_VERSION:=24.11.11
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
+PKG_VERSION:=113.11.21
 PKG_RELEASE:=1
 
+PKG_SOURCE_SUBDIR:=$(PKG_NAME)-$(PKG_VERSION)
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/XTLS/Xray-core/tar.gz/v$(PKG_VERSION)?
-PKG_HASH:=4ba61bf03096809ef9a7fb27fa7e8232bcc79ae1cc2ac1b601abe0366879111c
+PKG_SOURCE_PROTO:=git
 
 PKG_MAINTAINER:=Tianling Shen <cnsztl@immortalwrt.org>
 PKG_LICENSE:=MPL-2.0
 PKG_LICENSE_FILES:=LICENSE
 
-PKG_BUILD_DIR:=$(BUILD_DIR)/Xray-core-$(PKG_VERSION)
+PKG_CONFIG_DEPENDS:= \
+	CONFIG_XRAY_CORE_PROVIDE_V2RAY_CORE
+
 PKG_BUILD_DEPENDS:=golang/host
 PKG_BUILD_PARALLEL:=1
 PKG_BUILD_FLAGS:=no-mips16
@@ -30,7 +35,7 @@ define Package/xray/template
   TITLE:=A proxy platform to bypass network restrictions
   SECTION:=net
   CATEGORY:=Network
-  URL:=https://xtls.github.io
+  URL:=https://github.com/XTLS/Xray-core
 endef
 
 define Package/xray-core
@@ -38,13 +43,6 @@ define Package/xray-core
   DEPENDS:=$(GO_ARCH_DEPENDS) +ca-bundle
 endef
 
-define Package/xray-example
-  $(call Package/xray/template)
-  TITLE+= (example configs)
-  DEPENDS:=xray-core
-  PKGARCH:=all
-endef
-
 define Package/xray/description
   Xray, Penetrates Everything. It helps you to build your own computer network.
   It secures your network connections and thus protects your privacy.
@@ -54,36 +52,23 @@ define Package/xray-core/description
   $(call Package/xray/description)
 endef
 
-define Package/xray-example/description
-  $(call Package/xray/description)
+define Package/xray-core/config
+menu "Xray-core Configuration"
+	depends on PACKAGE_xray-core
 
-  This includes example configuration files for xray-core.
-endef
-
-define Package/xray-core/conffiles
-/etc/xray/
-/etc/config/xray
+config XRAY_CORE_PROVIDE_V2RAY_CORE
+	bool "Provide V2Ray binary using XRay"
+	default n
+endmenu
 endef
 
 define Package/xray-core/install
 	$(call GoPackage/Package/Install/Bin,$(PKG_INSTALL_DIR))
 	$(INSTALL_DIR) $(1)/usr/bin/
 	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/main $(1)/usr/bin/xray
-
-	$(INSTALL_DIR) $(1)/etc/xray/
-	$(INSTALL_DATA) $(CURDIR)/files/config.json.example $(1)/etc/xray/
-
-	$(INSTALL_DIR) $(1)/etc/config/
-	$(INSTALL_CONF) $(CURDIR)/files/xray.conf $(1)/etc/config/xray
-	$(INSTALL_DIR) $(1)/etc/init.d/
-	$(INSTALL_BIN) $(CURDIR)/files/xray.init $(1)/etc/init.d/xray
-endef
-
-define Package/xray-example/install
-	$(INSTALL_DIR) $(1)/etc/xray/
-	$(INSTALL_DATA) $(CURDIR)/files/vpoint_socks_vmess.json $(1)/etc/xray/
-	$(INSTALL_DATA) $(CURDIR)/files/vpoint_vmess_freedom.json $(1)/etc/xray/
+ifneq ($(CONFIG_XRAY_CORE_PROVIDE_V2RAY_CORE),)
+	$(LN) xray $(1)/usr/bin/v2ray
+endif
 endef
 
 $(eval $(call BuildPackage,xray-core))
-$(eval $(call BuildPackage,xray-example))
--- a/feeds/packages/net/zerotier/Makefile
+++ b/feeds/packages/net/zerotier/Makefile
@@ -5,14 +5,15 @@
 
 include $(TOPDIR)/rules.mk
 
+PKG_SOURCE_URL:=https://github.com/zerotier/ZeroTierOne.git
+PKG_SOURCE_VERSION:=b12dd19d441649ea159ba8b473e366c7694fdf76
 PKG_NAME:=zerotier
-PKG_VERSION:=1.14.1
+PKG_SOURCE_SHORTID=$(shell echo $(PKG_SOURCE_VERSION) | cut -c1-7)
+PKG_VERSION:=1.14.2.113.11.14
 PKG_RELEASE:=1
-
+PKG_SOURCE_PROTO:=git
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
-PKG_SOURCE_URL:=https://codeload.github.com/zerotier/ZeroTierOne/tar.gz/$(PKG_VERSION)?
-PKG_HASH:=4f9f40b27c5a78389ed3f3216c850921f6298749e5819e9f2edabb2672ce9ca0
-PKG_BUILD_DIR:=$(BUILD_DIR)/ZeroTierOne-$(PKG_VERSION)
+PKG_BUILD_DIR:=$(BUILD_DIR)/$(PKG_NAME)-$(PKG_VERSION)
 
 PKG_MAINTAINER:=Moritz Warning <moritzwarning@web.de>
 PKG_LICENSE:=BSL 1.1
@@ -62,22 +63,15 @@ endef
 TARGET_CFLAGS += -Wl,-z,noexecstack
 TARGET_LDFLAGS += -Wl,--as-needed -Wl,-z,noexecstack
 
-define Package/zerotier/conffiles
-/etc/config/zerotier
-endef
-
 define Package/zerotier/install
 	$(INSTALL_DIR) $(1)/usr/bin
 	$(INSTALL_BIN) $(PKG_BUILD_DIR)/zerotier-one $(1)/usr/bin/
 	$(LN) zerotier-one $(1)/usr/bin/zerotier-cli
 	$(LN) zerotier-one $(1)/usr/bin/zerotier-idtool
-	$(INSTALL_DIR) $(1)/etc/uci-defaults
 
 ifeq ($(CONFIG_ZEROTIER_ENABLE_SELFTEST),y)
 	$(INSTALL_BIN) $(PKG_BUILD_DIR)/zerotier-selftest $(1)/usr/bin/
 endif
-
-	$(CP) ./files/* $(1)/
 endef
 
 $(eval $(call BuildPackage,zerotier))
--- a/feeds/packages/utils/dockerd/Makefile
+++ b/feeds/packages/utils/dockerd/Makefile
@@ -34,7 +34,7 @@ define Package/dockerd
   TITLE:=Docker Community Edition Daemon
   URL:=https://www.docker.com/
   DEPENDS:=$(GO_ARCH_DEPENDS) \
-    +ca-certificates \
+    +ca-bundle \
     +containerd \
     +iptables \
     +iptables-mod-extra \
--- a/feeds/luci/themes/luci-theme-bootstrap/ucode/template/themes/bootstrap/footer.ut
+++ b/feeds/luci/themes/luci-theme-bootstrap/ucode/template/themes/bootstrap/footer.ut
@@ -7,7 +7,7 @@
 					{{ version.luciname }} ({{ version.luciversion }})</a>
 				/
 				<a href="{{ entityencode(version.disturl ?? '#', true) }}" target="_blank" rel="noreferrer">
-					{{ version.distname }} {{ version.distversion }} ({{ version.distrevision }})</a>
+					{{ version.distname }} {{ version.distversion }}</a>
 				{% if (lua_active): %}
 					/ {{ _('Lua compatibility mode active') }}
 				{% endif %}
--- a/feeds/luci/applications/luci-app-upnp/root/usr/share/rpcd/ucode/luci.upnp
+++ b/feeds/luci/applications/luci-app-upnp/root/usr/share/rpcd/ucode/luci.upnp
@@ -46,7 +46,7 @@
 
 			if (ipt) {
 				for (let line = ipt.read('line'); length(line); line = ipt.read('line')) {
-					let m = match(line, /^([0-9]+)\s+([a-z]+).+dpt:([0-9]+) to:(\S+):([0-9]+)/);
+					let m = match(line, /^([0-9]+).+\s+([a-z]+).+dpt:([0-9]+) to:(\S+):([0-9]+)/);
 
 					if (m) {
 						push(rules, {
--- a/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/29_ports.js
+++ /dev/null
@@ -1,386 +0,0 @@
-'use strict';
-'require baseclass';
-'require fs';
-'require ui';
-'require uci';
-'require rpc';
-'require network';
-'require firewall';
-
-var callGetBuiltinEthernetPorts = rpc.declare({
-	object: 'luci',
-	method: 'getBuiltinEthernetPorts',
-	expect: { result: [] }
-});
-
-function isString(v)
-{
-	return typeof(v) === 'string' && v !== '';
-}
-
-function resolveVLANChain(ifname, bridges, mapping)
-{
-	while (!mapping[ifname]) {
-		var m = ifname.match(/^(.+)\.([^.]+)$/);
-
-		if (!m)
-			break;
-
-		if (bridges[m[1]]) {
-			if (bridges[m[1]].vlan_filtering)
-				mapping[ifname] = bridges[m[1]].vlans[m[2]];
-			else
-				mapping[ifname] = bridges[m[1]].ports;
-		}
-		else if (/^[0-9]{1,4}$/.test(m[2]) && m[2] <= 4095) {
-			mapping[ifname] = [ m[1] ];
-		}
-		else {
-			break;
-		}
-
-		ifname = m[1];
-	}
-}
-
-function buildVLANMappings(mapping)
-{
-	var bridge_vlans = uci.sections('network', 'bridge-vlan'),
-	    vlan_devices = uci.sections('network', 'device'),
-	    interfaces = uci.sections('network', 'interface'),
-	    bridges = {};
-
-	/* find bridge VLANs */
-	for (var i = 0, s; (s = bridge_vlans[i]) != null; i++) {
-		if (!isString(s.device) || !/^[0-9]{1,4}$/.test(s.vlan) || +s.vlan > 4095)
-			continue;
-
-		var aliases = L.toArray(s.alias),
-		    ports = L.toArray(s.ports),
-		    br = bridges[s.device] = (bridges[s.device] || { ports: [], vlans: {}, vlan_filtering: true });
-
-		br.vlans[s.vlan] = [];
-
-		for (var j = 0; j < ports.length; j++) {
-			var port = ports[j].replace(/:[ut*]+$/, '');
-
-			if (br.ports.indexOf(port) === -1)
-				br.ports.push(port);
-
-			br.vlans[s.vlan].push(port);
-		}
-
-		for (var j = 0; j < aliases.length; j++)
-			if (aliases[j] != s.vlan)
-				br.vlans[aliases[j]] = br.vlans[s.vlan];
-	}
-
-	/* find bridges, VLAN devices */
-	for (var i = 0, s; (s = vlan_devices[i]) != null; i++) {
-		if (s.type == 'bridge') {
-			if (!isString(s.name))
-				continue;
-
-			var ports = L.toArray(s.ports),
-			    br = bridges[s.name] || (bridges[s.name] = { ports: [], vlans: {}, vlan_filtering: false });
-
-			if (s.vlan_filtering == '0')
-				br.vlan_filtering = false;
-			else if (s.vlan_filtering == '1')
-				br.vlan_filtering = true;
-
-			for (var j = 0; j < ports.length; j++)
-				if (br.ports.indexOf(ports[j]) === -1)
-					br.ports.push(ports[j]);
-
-			mapping[s.name] = br.ports;
-		}
-		else if (s.type == '8021q' || s.type == '8021ad') {
-			if (!isString(s.name) || !isString(s.vid) || !isString(s.ifname))
-				continue;
-
-			/* parent device is a bridge */
-			if (bridges[s.ifname]) {
-				/* parent bridge is VLAN enabled, device refers to VLAN ports */
-				if (bridges[s.ifname].vlan_filtering)
-					mapping[s.name] = bridges[s.ifname].vlans[s.vid];
-
-				/* parent bridge is not VLAN enabled, device refers to all bridge ports */
-				else
-					mapping[s.name] = bridges[s.ifname].ports;
-			}
-
-			/* parent is a simple netdev */
-			else {
-				mapping[s.name] = [ s.ifname ];
-			}
-
-			resolveVLANChain(s.ifname, bridges, mapping);
-		}
-	}
-
-	/* resolve VLAN tagged interfaces in bridge ports */
-	for (var brname in bridges) {
-		for (var i = 0; i < bridges[brname].ports.length; i++)
-			resolveVLANChain(bridges[brname].ports[i], bridges, mapping);
-
-		for (var vid in bridges[brname].vlans)
-			for (var i = 0; i < bridges[brname].vlans[vid].length; i++)
-				resolveVLANChain(bridges[brname].vlans[vid][i], bridges, mapping);
-	}
-
-	/* find implicit VLAN devices */
-	for (var i = 0, s; (s = interfaces[i]) != null; i++) {
-		if (!isString(s.device))
-			continue;
-
-		resolveVLANChain(s.device, bridges, mapping);
-	}
-}
-
-function resolveVLANPorts(ifname, mapping, seen)
-{
-	var ports = [];
-
-	if (!seen)
-		seen = {};
-
-	if (mapping[ifname]) {
-		for (var i = 0; i < mapping[ifname].length; i++) {
-			if (!seen[mapping[ifname][i]]) {
-				seen[mapping[ifname][i]] = true;
-				ports.push.apply(ports, resolveVLANPorts(mapping[ifname][i], mapping, seen));
-			}
-		}
-	}
-	else {
-		ports.push(ifname);
-	}
-
-	return ports.sort(L.naturalCompare);
-}
-
-function buildInterfaceMapping(zones, networks) {
-	var vlanmap = {},
-	    portmap = {},
-	    netmap = {};
-
-	buildVLANMappings(vlanmap);
-
-	for (var i = 0; i < networks.length; i++) {
-		var l3dev = networks[i].getDevice();
-
-		if (!l3dev)
-			continue;
-
-		var ports = resolveVLANPorts(l3dev.getName(), vlanmap);
-
-		for (var j = 0; j < ports.length; j++) {
-			portmap[ports[j]] = portmap[ports[j]] || { networks: [], zones: [] };
-			portmap[ports[j]].networks.push(networks[i]);
-		}
-
-		netmap[networks[i].getName()] = networks[i];
-	}
-
-	for (var i = 0; i < zones.length; i++) {
-		var networknames = zones[i].getNetworks();
-
-		for (var j = 0; j < networknames.length; j++) {
-			if (!netmap[networknames[j]])
-				continue;
-
-			var l3dev = netmap[networknames[j]].getDevice();
-
-			if (!l3dev)
-				continue;
-
-			var ports = resolveVLANPorts(l3dev.getName(), vlanmap);
-
-			for (var k = 0; k < ports.length; k++) {
-				portmap[ports[k]] = portmap[ports[k]] || { networks: [], zones: [] };
-
-				if (portmap[ports[k]].zones.indexOf(zones[i]) === -1)
-					portmap[ports[k]].zones.push(zones[i]);
-			}
-		}
-	}
-
-	return portmap;
-}
-
-function formatSpeed(carrier, speed, duplex) {
-	if ((speed > 0) && duplex) {
-		var d = (duplex == 'half') ? '\u202f(H)' : '',
-		    e = E('span', { 'title': _('Speed: %d Mibit/s, Duplex: %s').format(speed, duplex) });
-
-		switch (speed) {
-		case 10:    e.innerText = '10\u202fM' + d;  break;
-		case 100:   e.innerText = '100\u202fM' + d; break;
-		case 1000:  e.innerText = '1\u202fGbE' + d; break;
-		case 2500:  e.innerText = '2.5\u202fGbE';   break;
-		case 5000:  e.innerText = '5\u202fGbE';     break;
-		case 10000: e.innerText = '10\u202fGbE';    break;
-		case 25000: e.innerText = '25\u202fGbE';    break;
-		case 40000: e.innerText = '40\u202fGbE';    break;
-		default:    e.innerText = '%d\u202fMbE%s'.format(speed, d);
-		}
-
-		return e;
-	}
-
-	return carrier ? _('Connected') : _('no link');
-}
-
-function formatStats(portdev) {
-	var stats = portdev._devstate('stats') || {};
-
-	return ui.itemlist(E('span'), [
-		_('Received bytes'), '%1024mB'.format(stats.rx_bytes),
-		_('Received packets'), '%1000mPkts.'.format(stats.rx_packets),
-		_('Received multicast'), '%1000mPkts.'.format(stats.multicast),
-		_('Receive errors'), '%1000mPkts.'.format(stats.rx_errors),
-		_('Receive dropped'), '%1000mPkts.'.format(stats.rx_dropped),
-
-		_('Transmitted bytes'), '%1024mB'.format(stats.tx_bytes),
-		_('Transmitted packets'), '%1000mPkts.'.format(stats.tx_packets),
-		_('Transmit errors'), '%1000mPkts.'.format(stats.tx_errors),
-		_('Transmit dropped'), '%1000mPkts.'.format(stats.tx_dropped),
-
-		_('Collisions seen'), stats.collisions
-	]);
-}
-
-function renderNetworkBadge(network, zonename) {
-	var l3dev = network.getDevice();
-	var span = E('span', { 'class': 'ifacebadge', 'style': 'margin:.125em 0' }, [
-		E('span', {
-			'class': 'zonebadge',
-			'title': zonename ? _('Part of zone %q').format(zonename) : _('No zone assigned'),
-			'style': firewall.getZoneColorStyle(zonename)
-		}, '\u202f'),
-		'\u202f', network.getName(), ': '
-	]);
-
-	if (l3dev)
-		span.appendChild(E('img', {
-			'title': l3dev.getI18n(),
-			'src': L.resource('icons/%s%s.png'.format(l3dev.getType(), l3dev.isUp() ? '' : '_disabled'))
-		}));
-	else
-		span.appendChild(E('em', _('(no interfaces attached)')));
-
-	return span;
-}
-
-function renderNetworksTooltip(pmap) {
-	var res = [ null ],
-	    zmap = {};
-
-	for (var i = 0; pmap && i < pmap.zones.length; i++) {
-		var networknames = pmap.zones[i].getNetworks();
-
-		for (var k = 0; k < networknames.length; k++)
-			zmap[networknames[k]] = pmap.zones[i].getName();
-	}
-
-	for (var i = 0; pmap && i < pmap.networks.length; i++)
-		res.push(E('br'), renderNetworkBadge(pmap.networks[i], zmap[pmap.networks[i].getName()]));
-
-	if (res.length > 1)
-		res[0] = N_((res.length - 1) / 2, 'Part of network:', 'Part of networks:');
-	else
-		res[0] = _('Port is not part of any network');
-
-	return E([], res);
-}
-
-return baseclass.extend({
-	title: _('Port status'),
-
-	load: function() {
-		return Promise.all([
-			L.resolveDefault(callGetBuiltinEthernetPorts(), []),
-			L.resolveDefault(fs.read('/etc/board.json'), '{}'),
-			firewall.getZones(),
-			network.getNetworks(),
-			uci.load('network')
-		]);
-	},
-
-	render: function(data) {
-		if (L.hasSystemFeature('swconfig'))
-			return null;
-
-		var board = JSON.parse(data[1]),
-		    known_ports = [],
-		    port_map = buildInterfaceMapping(data[2], data[3]);
-
-		if (Array.isArray(data[0]) && data[0].length > 0) {
-			known_ports = data[0].map(port => ({
-				...port,
-				netdev: network.instantiateDevice(port.device)
-			}));
-		}
-		else {
-			if (L.isObject(board) && L.isObject(board.network)) {
-				for (var k = 'lan'; k != null; k = (k == 'lan') ? 'wan' : null) {
-					if (!L.isObject(board.network[k]))
-						continue;
-
-					if (Array.isArray(board.network[k].ports))
-						for (let i = 0; i < board.network[k].ports.length; i++)
-							known_ports.push({
-								role: k,
-								device: board.network[k].ports[i],
-								netdev: network.instantiateDevice(board.network[k].ports[i])
-							});
-					else if (typeof(board.network[k].device) == 'string')
-						known_ports.push({
-							role: k,
-							device: board.network[k].device,
-							netdev: network.instantiateDevice(board.network[k].device)
-						});
-				}
-			}
-		}
-
-		known_ports.sort(function(a, b) {
-			return L.naturalCompare(a.device, b.device);
-		});
-
-		return E('div', { 'style': 'display:grid;grid-template-columns:repeat(auto-fit, minmax(70px, 1fr));margin-bottom:1em' }, known_ports.map(function(port) {
-			var speed = port.netdev.getSpeed(),
-			    duplex = port.netdev.getDuplex(),
-			    carrier = port.netdev.getCarrier(),
-			    pmap = port_map[port.netdev.getName()],
-			    pzones = (pmap && pmap.zones.length) ? pmap.zones.sort(function(a, b) { return L.naturalCompare(a.getName(), b.getName()) }) : [ null ];
-
-			return E('div', { 'class': 'ifacebox', 'style': 'margin:.25em;min-width:70px;max-width:100px' }, [
-				E('div', { 'class': 'ifacebox-head', 'style': 'font-weight:bold' }, [ port.netdev.getName() ]),
-				E('div', { 'class': 'ifacebox-body' }, [
-					E('img', { 'src': L.resource('icons/port_%s.png').format(carrier ? 'up' : 'down') }),
-					E('br'),
-					formatSpeed(carrier, speed, duplex)
-				]),
-				E('div', { 'class': 'ifacebox-head cbi-tooltip-container', 'style': 'display:flex' }, [
-					E([], pzones.map(function(zone) {
-						return E('div', {
-							'class': 'zonebadge',
-							'style': 'cursor:help;flex:1;height:3px;opacity:' + (carrier ? 1 : 0.25) + ';' + firewall.getZoneColorStyle(zone)
-						});
-					})),
-					E('span', { 'class': 'cbi-tooltip left' }, [ renderNetworksTooltip(pmap) ])
-				]),
-				E('div', { 'class': 'ifacebox-body' }, [
-					E('div', { 'class': 'cbi-tooltip-container', 'style': 'text-align:left;font-size:80%' }, [
-						'\u25b2\u202f%1024.1mB'.format(port.netdev.getTXBytes()),
-						E('br'),
-						'\u25bc\u202f%1024.1mB'.format(port.netdev.getRXBytes()),
-						E('span', { 'class': 'cbi-tooltip' }, formatStats(port.netdev))
-					]),
-				])
-			]);
-		}));
-	}
-});

#!/bin/sh /etc/rc.common
START=90
USE_PROCD=1

service_triggers(){
	procd_add_reload_trigger 'n2n-supernode'
}

start_service(){
	[ "$(uci -q get n2n-supernode.@base[0].enabled)" = 0 ] && return 1
	port=$(uci -q get n2n-supernode.@base[0].port) || return 1
	community=$(uci -q show n2n-supernode.@base[0].community | sed -e "s/.*=//" -e "s/' '/\n/g" -e "s/'//g")
	ip_min=$(uci -q get n2n-supernode.@base[0].ip_min)
	ip_max=$(uci -q get n2n-supernode.@base[0].ip_max)
	name=$(uci -q get n2n-supernode.@base[0].name)
	server=$(uci -q show n2n-supernode.@base[0].server | sed -e "s/.*=//" -e "s/' '/\n/g" -e "s/'//g")
	param="-Osupernode.spoofing_protection=false -Oconnection.bind=$port"
	[ "$community" ] && echo "$community" > /tmp/n2n-supernode.list && param="$param -Osupernode.community_file=/tmp/n2n-supernode.list"
	[ "$ip_min" ] && param="$param -Osupernode.auto_ip_min=$ip_min"
	[ "$ip_max" ] && param="$param -Osupernode.auto_ip_max=$ip_max"
	[ "$name" ] && export N3N_FEDERATION=$name
	for i in $server;do
		param="$param -Osupernode.peer=$i"
	done
	procd_open_instance
	procd_set_param command /usr/bin/supernode start supernode $param
	procd_set_param stderr 1
	procd_set_param stdout 1
	procd_set_param respawn
	procd_close_instance
}

stop_service(){
	rm -f /tmp/n2n-supernode.list
}

reload_service(){
	stop
	start
}

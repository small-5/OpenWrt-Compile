#!/bin/sh
[ $1 ] || exit
N=overwall.@global[0]

if [ $1 = A ];then
	uci -q get $N.auth_9 >/dev/null && exit || exit 1
fi

judge(){
	echo $* | grep -wqE 'OpenWrt 中華民國[^ ]* By Small_5' || return 1
}

parse(){
	echo $* | sed 's/ 中華民國.* /-民國 By /'
}

A=`cat /etc/openwrt_release | grep DISTRIB_DESCRIPTION | awk -F "['']" '{print $2}'`
B=`cat /usr/lib/os-release`
C=`echo "$B" | grep PRETTY_NAME | awk -F "[\"\"]" '{print $2}'`
B=`echo "$B" | grep OPENWRT_RELEASE | awk -F "[\"\"]" '{print $2}'`
for i in "$A" "$B" "$C";do
	if ! judge $i;then
		sed -i '/Unauthorized/d' /tmp/overwall.log 2>/dev/null
		echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') Unauthorized >> /tmp/overwall.log
		exit
	fi
done
B="中華民國千秋萬世直到永遠 $(parse $A)-$(parse $B)/$(parse $C)"

get_mac(){
	local a=/sys/class/net/eth1/address
	local b
	[ -s $a ] || a=`echo $a | sed 's/1/0/'`
	if which ethtool >/dev/null && [ "$(cat /proc/device-tree/model 2>/dev/null)" != "FriendlyElec NanoPi R4S" ];then
		b=`ethtool -P $(echo $a | grep -o eth.) | awk '{print$3}'`
	fi
	[ $b ] && echo $b || cat $a
}

get_board(){
	if [ -s /proc/device-tree/model ];then
		cat /proc/device-tree/model
	elif [ -s /tmp/sysinfo/board_name ];then
		cat /tmp/sysinfo/board_name
	fi
}

hard_code(){
	local a=`cat /proc/cpuinfo | grep -E "model name|cpu model" | sed -n 1p | sed 's/.*: //'`
	local b=`get_mac`
	local c=`get_board`
	local d=`dmidecode -s system-uuid 2>/dev/null`
	echo $B $a $b $c $d | sha256sum | awk '{print$1}'
}

if [ $1 = 2 ];then
	hard_code
	exit
elif [ $1 = 3 ];then
	sed -i '/HardwareCode/d' /tmp/overwall.log 2>/dev/null
	echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') HardwareCode: $(hard_code) >> /tmp/overwall.log
	exit
fi

qs(){
	export PASS="$B$(TZ=UTC-1 date '+%A%b%Y-%m-%d%H')$(uci -q get $N.auth_2)";echo $(hard_code) | openssl aes-256-cbc -md sha256 -a -A -pbkdf2 -nosalt -pass env:PASS | sed 's/[^A-Za-z0-9]//g' | cut -c 20-29
}

C=`uci -q get $N.auth_1`
C=`export PASS="$B";echo ${C:0:9}${C:16:10}${C:29:5}${C:38} | sed -e 's/^$1/U2/' | openssl aes-256-cbc -md sha256 -a -d --pbkdf2 -pass env:PASS`

r=1
if [ $1 = 0 ];then
	[ "$2" -a "$3" -a "$4" -a "$5" -a "$6" ] || exit 1
	while ! echo -e "url=\"$C/$2?$(qs)\"\n-A \"$A\"" | curl $4 $3 -K -;do
		[ $r -ge $5 ] && exit 1 || let r++
		sleep $6
	done
elif [ $1 = 1 ];then
	[ "$2" -a "$3" -a "$4" -a "$5" ] || exit 1
	while ! echo -e "url=\"$C/$2?$(qs)\"\n-A \"$A\"" | curl $3 -K -;do
		[ $r -ge $4 ] && exit 1 || let r++
		sleep $5
	done
else
	D=`uci -q get $N.auth_9`
	D=`export PASS="$B";echo ${D:0:9}${D:16:10}${D:29:5}${D:38} | sed -e 's/^$1/U2/' | openssl aes-256-cbc -md sha256 -a -d --pbkdf2 -pass env:PASS 2>/dev/null`
	E=/tmp/overauth.log
	F=/tmp/lock/overauth.lock
	if [ "$D" = "中華民國千秋萬世直到永遠 ROC Forver" ];then
		[ -f $F ] && echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') 上一個任務未結束 >> $E && exit
		touch $F
		case $1 in
			4)echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') 當前鏈結: ${C:-空} >> $E;;
			5)A=`export PASS="$B";echo $2 | openssl aes-256-cbc -md sha256 -a -A -pbkdf2 -pass env:PASS | sed -e 's/^U2/$1/'`
			echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') 加密代碼: ${A:0:9}ROC1911${A:9:10}For${A:19:5}ever${A:24} >> $E;;
			6)sed -i '/列表起始位/,/列表結束位/d' $E
			echo --------------------------------------------列表起始位-------------------------------------------- >> $E
			echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') >> $E
			eval $(uci -q get $N.auth_a) >> $E
			echo --------------------------------------------列表結束位-------------------------------------------- >> $E;;
			7)eval $(uci -q get $N.auth_b) >> $E;;
			8)eval $(uci -q get $N.auth_c) >> $E;;
			9)eval $(uci -q get $N.auth_d) >> $E;;
			a)eval $(uci -q get $N.auth_e) >> $E;;
			b)eval $(uci -q get $N.auth_f) >> $E;;
		esac
		rm $F
	else
		sed -i '/非授權者不得使用此功能/d' $E 2>/dev/null
		echo $(date +'%Y' | awk '{print ($1-1911)}')-$(date +'%m-%d %H:%M:%S') 非授權者不得使用此功能 >> $E
	fi
fi

--- a/feeds/luci/modules/luci-base/root/usr/share/rpcd/ucode/luci
+++ b/feeds/luci/modules/luci-base/root/usr/share/rpcd/ucode/luci
@@ -547,7 +547,10 @@ const methods = {
 
 	getCPUInfo: {
 		call: function() {
-			return { result: popen('top -n1 | awk \'/^CPU/ {printf("%d%",100-$8)}\'').read('all') };
+			let rv = {};
+			rv.cpufreq = popen('echo $(expr $(cat /sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq) / 1000) MHz +$(awk \'{printf("%.1fÂ°C",$0/1000)}\' /sys/class/thermal/thermal_zone0/temp)').read('all');
+			rv.cpufree = popen('top -n1 | awk \'/^CPU/ {printf("%d%",100-$8)}\'').read('all');
+			return rv;
 		}
 	},
 
--- a/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
+++ b/feeds/luci/modules/luci-mod-status/htdocs/luci-static/resources/view/status/include/10_system.js
@@ -91,6 +91,7 @@ return baseclass.extend({
 			_('Model'),            boardinfo.model,
 			_('Architecture'),     boardinfo.system,
 			_('Target Platform'),  (L.isObject(boardinfo.release) ? boardinfo.release.target : ''),
+			_('CPU Info'),         cpuinfo.cpufreq,
 			_('Firmware Version'), (L.isObject(boardinfo.release) ? boardinfo.release.description + ' / ' : '') + (luciversion || ''),
 			_('Kernel Version'),   boardinfo.kernel,
 			_('Local Time'),       datestr,
@@ -100,7 +101,7 @@ return baseclass.extend({
 				systeminfo.load[1] / 65535.0,
 				systeminfo.load[2] / 65535.0
 			) : null,
-			_('CPU usage (%)'),    cpuinfo.result
+			_('CPU usage (%)'),    cpuinfo.cpufree
 		];
 
 		var table = E('table', { 'class': 'table' });
--- a/package/ipk/luci-app-cpufreq/root/etc/config/cpufreq
+++ b/package/ipk/luci-app-cpufreq/root/etc/config/cpufreq
@@ -1,2 +1,9 @@
 
 config settings 'cpufreq'
+	option mode0 'ondemand'
+	option min0 '600000'
+	option max0 '1725000'
+	option mode1 'ondemand'
+	option min1 '600000'
+	option max1 '1725000'
+
--- /dev/null
+++ b/target/linux/ipq806x/base-files/etc/init.d/cpufreq
@@ -1,17 +0,0 @@
-#!/bin/sh /etc/rc.common
-
-START=15
-
-boot() {
-  local governor
-
-  governor=$(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_governor)
-
-  if [ "$governor" = "ondemand" ]; then
-    # Effective only with ondemand
-    echo 600000 > /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq
-    echo 600000 > /sys/devices/system/cpu/cpufreq/policy1/scaling_min_freq
-    echo 10 > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
-    echo 50 > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
-  fi
-}
